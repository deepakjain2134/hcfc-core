@model IEnumerable<HCF.BDO.Buildings>

@{
    ViewBag.Title = Localizer["TitleBuilding"].Value;
}

@section pageHeader{
<section class="content-header">
    <h1>
        @Localizer["TitleBuilding"]
    </h1>
</section>
    }
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="settingnewBox">
                @await Html.PartialAsync("_MoreConfig")
                <div class="rightcol-setting">
                    <div class="box box-primary">
                        <div class="row tablelist-topform form-inline">
                            <div class="col-md-12">
                                <div class="form-group sitesearch">
                                    <label title="Get Site Name">Site:</label>
                                    <sitedropdownlist name="SiteName" firsttext="All Sites" class="form-control" required="required"></sitedropdownlist>
                                </div>
                                <div class="form-group">
                                    <label>Status:</label>
                                    <activestatusdropdown name="Status" selectevalue="ACTIV" firsttext="All" class="form-control ddlbox"></activestatusdropdown>
                                </div>
                                <div class="form-group col-md-4">
                                    <label>Building Type</label>
                                    <select id="BuildingTypeId" name="BuildingTypeId" required="required" class="form-control">
                                        <option value="">All</option>
                                        <option value="2">Business Occupancy</option>
                                        <option value="1">Health-care Occupancy</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">                           
                            <div class="col-md-12">
                                <table id="mytbl" class="table table-bordered table-striped" style="width:100%;">
                                    <thead>
                                        <tr>
                                            <th style="display:none"></th>
                                            <th> Site </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.BuildingName)
                                            </th>
                                            <th>Building Code</th>
                                            <th>Supervisor</th>
                                            <th>Location</th>
                                            <th class="no-sorting" style="width:20px;">Status</th>
                                            <th class="no-sorting" style="width:20px;"></th>
                                             <th style="display:none"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.OrderBy(x => x.BuildingName))
                                        {
                                            <tr>
                                                <td style="display:none">
                                                    @Html.DisplayFor(modelItem => item.SiteCode)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.SiteName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.BuildingName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.BuildingCode)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.BuildingAssignUser)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Location)
                                                </td>
                                                <td>
                                                    @{
                                                        HCF.BDO.Enums.ACTIVStatus enumstext = (HCF.BDO.Enums.ACTIVStatus)Convert.ToInt32(item.IsActive);
                                                    }
                                                    <span>@enumstext</span>
                                                </td>
                                                <td class="build-editicon">
                                                    <img onclick="location.href ='@Url.Action("EditBuilding", "Organization", new { buildingId = item.BuildingId })'" src="@Url.Content(HCF.Web.Models.ImagePathModel.EditIcon)" title="Edit" />
                                                </td>
                                                <td style="display:none">
                                                    @item.BuildingTypeId
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>

    $('a[rel=popover]').popover({
        html: true,
        animated: 'fade',
        trigger: 'hover',
        placement: 'left',
        content: function () { return '<img height="250" width="250" src="' + $(this).data('img') + '" />'; }
    });
    $(document).ready(function () {
        debugger;

        var dTable = $('#mytbl').DataTable({
            searching: true,
            pageLength: 20,
            lengthChange: false,
            bPaginate: $('#mytbl tbody tr').length > 20,
            bInfo: true,
            aaSorting: [],
            language: {
                emptyTable: "No data available in table",
                search: "_INPUT_", //To remove Search Label
                searchPlaceholder: "Search..."
            },
            aoColumnDefs: [
                {
                    orderSequence: ["desc", "asc"],
                    aTargets: ['_all']
                }
            ],
           /* dom: "Blftip",*/

             initComplete: function () {
                 $("div.toolbar").html('<div class="add-commanBtn"><a href="@(Url.Action("addbuilding", "Organization"))" class= "pull-right" ><img src="/dist/Images/Icons/3d_add_button.png" title="Add Building" alt="3d_add_button"></a></div >');
        },
            dom: "<'row'<'col-sm-2'B><'col-sm-2'l><'col-sm-8 tableactions'flp <'toolbar'>>>" + "<'row'<'col-md-12'<'table-responsive'tr> > >" + "<'row'<'col-sm-12 text-right'p>>",


            buttons: [
                {
                    extend: 'pdfHtml5',
                    orientation: 'portrait',
                    title: 'Buildings Report',
                    exportOptions: {
                        columns: [1, 2, 3, 4, 5, 6]
                    },
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    customize: function (doc) {
                        doc.content.splice(0, 1);
                        var now = new Date();
                        var jsDate = setDateFormat(now);
                        var logo = localStorage.getItem("logoimgbase64");//getBase64FromImageUrl();
                        doc.pageMargins = [20, 60, 20, 30];
                        doc.defaultStyle.fontSize = 8;
                        doc.styles.tableHeader.fontSize = 7;
                        doc['header'] = (function () {
                            return {
                                columns: [
                                    { image: logo, width: 40 },
                                    {
                                        alignment: 'left',
                                        italics: true,
                                        text: getOrgName('@HCF.Web.Base.UserSession.CurrentOrg.Name'), @*text: '@HCF.Web.Base.UserSession.CurrentOrg.Name',*@
                                        fontSize: 14,
                                        margin: [0, 6, 0, 0],
                                        width: 200,
                                    },
                                    {
                                        alignment: 'middle',
                                        fontSize: 14,
                                        text: 'Buildings Report',
                                        margin: [0, 6, 0, 0]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        doc['footer'] = (function (page, pages) {
                            return {
                                columns: [
                                    {
                                        alignment: 'left',
                                        text: ['Generated from CRx on ', { text: jsDate.toString() }]
                                    },
                                    {
                                        alignment: 'center',
                                        text: ['Page ', { text: page.toString() }, ' of ', { text: pages.toString() }]
                                    },
                                    {
                                        alignment: 'right',
                                        text: ['Generated by: ', { text: '@HCF.Web.Base.UserSession.CurrentUser.Name' }]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        var objLayout = {};
                        objLayout['hLineWidth'] = function (i) { return .5; };
                        objLayout['vLineWidth'] = function (i) { return .5; };
                        objLayout['hLineColor'] = function (i) { return '#aaa'; };
                        objLayout['vLineColor'] = function (i) { return '#aaa'; };
                        objLayout['paddingLeft'] = function (i) { return 4; };
                        objLayout['paddingRight'] = function (i) { return 4; };
                        doc.content[0].layout = objLayout;
                    }
                },
                {
                    extend: 'excel',
                    title: 'Buildings Report',
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    exportOptions: {
                        columns: [1, 2, 3, 4, 5, 6],
                        orthogonal: 'export'
                    }
                }
            ]
        });

        HideTableSorting();
        $('#mytbl thead').click(function () {
            HideTableSorting();
        });

        $('.dt-button.buttons-pdf.buttons-html5').attr('title', 'Download PDF');
        $('.dt-button.buttons-excel.buttons-html5').attr('title', 'Download Excel');

        function HideTableSorting() {
            const elLocation = $('#mytbl th[aria-label]')[6];
            const el = $('#mytbl th[aria-label]')[7];
            $(elLocation, el).removeClass("sorting");
        }

        $('#SiteName').on('change', function () {
            debugger;
            filterRecords();
        });

         $('#SiteName').on('change', function () {
            debugger;
            filterRecords();
        });

        $('#BuildingTypeId').on('change', function () {
            var buildingTypeId=$(this).val()
            dTable.columns(8).search(buildingTypeId).draw();
        });

        filterRecords();

        function filterRecords() {
            debugger;
            var siteId = $("#SiteName").val();
            var status = $("#Status").val();
            var buildingTypeId=$("#BuildingTypeId").val();
            if (siteId.length > 0 && status.length > 0) {
                dTable.columns(0).search("^" + siteId + "$", true, false, true, false).columns(6).search("^" + status + "$", true, false, true, false).draw();
            }
            else if (siteId.length > 0)
                dTable.columns(0).search("^" + siteId + "$", true, false, true, false).columns(6).search("").draw();
            else if (status.length > 0)
                dTable.columns(0).search("").columns(6).search("^" + status + "$", true, false, true, false).draw();
            else
                dTable.columns(0).search("").columns(6).search("").draw();
        }

    });

</script>
