@model HCF.Web.ViewModels.UserEpDetailLists
@{
    var standards = Model.EpDetails.Where(x => x.IsActive).Select(x => x.Standard).Distinct();
    var firstUserId = Model.UserIds.Count() > 0 ? Model.UserIds[0] : 0;

}
<div class="modal-dialog" style="max-width: 50%;">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">User EP Assignment</h4>
        </div>
        <div class="modal-body">
            <div style="height:350px;overflow-y:scroll">
                <div id="standardep_tree">
                    <ul>
                        @foreach (var std in standards.GroupBy(x => new { x.StDescID, x.TJCStandard }).ToList())
                        {
                            var std_ep_count = Model.EpDetails.Where(x => x.StDescID == std.Key.StDescID && x.IsActive && x.IsApplicable && x.IsExpired == false && x.IsUpComingEp == false).ToList().Count;
                            if (std_ep_count > 0)
                            {
                                <li epid="-1" frequencyid="0">
                                    @std.Key.TJCStandard
                                    <ul>
                                        @foreach (var ep in Model.EpDetails.Where(x => x.StDescID == std.Key.StDescID && x.IsActive && x.IsApplicable && x.IsExpired == false && x.IsUpComingEp == false).ToList().OrderBy(x => x.EPNumber))
                                        {
                                            <li epid="@ep.EPDetailId"
                                                frequencyid="@ep.EPFrequency.FirstOrDefault().FrequencyId">
                                                @ep.EPNumber
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            @if (Model.EpDetails.Any())
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12 text-left">
                            <input type="checkbox" name="chkSelectAllEps" id="chkSelectAllEps"><span></span><label>&nbsp; Select All EPs</label>

                        </div>

                    </div>
                </div>
                <button type="button" class="popupCommon-btn comm-button" id="saveAssignment">Apply changes</button>
            }
            <button type="button" class="popupCommon-btn comm-Cancelbutton" data-dismiss="modal" id="CancelUserAccountMethod">Cancel</button>
        </div>
    </div>
</div>
<script src="@Url.Content("~/dist/js/jstree/jstree.min.js")"></script>
<link href="@Url.Content("~/dist/css/jstree/jstree.style.min.css")" rel="stylesheet" />
<script>

    $('#chkSelectAllEps').change(function () {
        if ($('#chkSelectAllEps').is(":checked")) {
            $("#standardep_tree").jstree().check_all(true);
        }
        else {
            $("#standardep_tree").jstree().uncheck_all(true);
        }
    });

    $('#standardep_tree').jstree({
        "checkbox": {
            "keep_selected_style": false
        },
        "plugins": ["checkbox"]
    }).on("check_node.jstree uncheck_node.jstree", function (e, data) {
        if (e.type == "uncheck_node") {
            $("#chkSelectAllEps").prop("checked", false);
        }
        else if (e.type == "check_node") {
            if ($(this).jstree().get_json('#', { flat: true }).length === $(this).jstree().get_checked(true).length)
                $("#chkSelectAllEps").prop("checked", true);
        }
    });
    debugger

    $("#modal-container1").on('shown.bs.modal', function () {

        var arraystring = '@Html.Raw(string.Join(",", Model.SelectedEps))';
        var array = [];
        array=arraystring.split(",")
    var selectedNodes = $('#standardep_tree').jstree().get_json('#', { flat: true });
    $.each(selectedNodes, function (index, selectedNode) {
        console.log(selectedNode);
        // var epId = $("#" + selectedNode).attr("epid");
        var epId = selectedNodes[index]["li_attr"].epid;
        if (array.indexOf(epId) > -1)
            $("#standardep_tree").jstree().check_node(this);
    });
});


    $('#saveAssignment').click(function () {
        debugger;
        var userIds = '@string.Join(',', Model.UserIds)';
        var userId = '@firstUserId';
        var checked_ids = [];
        var selectedNodes = $('#standardep_tree').jstree().get_selected(true);
        $.each(selectedNodes, function (index, selectedNode) {
            var epId = selectedNodes[index]["li_attr"].epid;
            if (epId != undefined)
                checked_ids.push(epId);
        });
        if (checked_ids.length == 0) {
            AlertWarningMsg('Select atleast one EP');
            return false;
        }

        console.log(checked_ids);
        var epAssignee = [];
        checked_ids.forEach(function (epId) {
            let epUser = {
                UserId: parseInt(userId),
                EPDetailId: parseInt(epId)
            };
            epAssignee.push(epUser);
        });
        $.ajax({
            url: "/Organization/AddEPAssignees?catId=0&mode=user&userIds=" + userIds + "&isRemoveAll=0",
            method: "POST",
            data: {
                __RequestVerificationToken: $('input[name=' + $.Constants.RequestVerificationToken + ']').val(),
                epAssignee: epAssignee
            },
            success: function (data) {
                successAlert("User(s) EPs updated successfully.");
                $("#partialView").html("");
                $("#partialView").html(data);
                $('#ddlMultiUser').val(userIds);
                $('.ddlMultiUser').selectpicker('refresh');
                $('#ddlMultiUser').trigger("change");
                //$('#modal-container').modal('hide');
            }
        });
    });





</script>
