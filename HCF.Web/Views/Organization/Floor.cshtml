@model IEnumerable<HCF.BDO.Floor>
@{

    List<HCF.BDO.Buildings> buildings = Model.Select(x => x.Building).ToList().GroupBy(x => x.BuildingId).Select(x => x.FirstOrDefault()).ToList();
    ViewBag.Title = Localizer["TitleFloors"].Value;
}

    @section pageHeader{
    <section class="content-header">
        <h1>
            Floors
        </h1>
    </section>
        }
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-header vender_page">
                        <div class="row tablelist-topform">
                            <div class="col-md-4 form-inline">
                                <label>Buildings:</label>
                                <buildingdropdownList name="buildings" selectedvalue="0" firsttext="All Building" class="form-control floor-control" required="required"></buildingdropdownList>
                                @*@Html.BuildingDropDownList("buildings", 0, " All Building ", new { @class = "form-control floor-control", required = "required" })*@
                            </div>
                        </div>
                       
                            <table id="floorTbl" class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Building.BuildingName)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.FloorName)
                                        </th>
                                        <th width="">
                                            @Html.DisplayNameFor(model => model.FloorCode)
                                        </th>
                                        <th width="">
                                            @Html.DisplayNameFor(model => model.Alias)
                                        </th>
                                        @*<th width="78px;">
                                            @Html.DisplayNameFor(model => model.ImagePath)
                                        </th>*@
                                        <th width="56px;">@Localizer["Status"] </th>
                                        <th width="56px;">Action</th>
                                        <th width="56px;">
                                            @Html.DisplayNameFor(model => model.ImagePath)
                                        </th>
                                        <th style="display:none"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @($"{item.Building.BuildingName}({item.Building.BuildingCode})")
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.FloorName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.FloorCode)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Alias)
                                            </td>

                                            <td class="comman_checkbox1 text-center">
                                                @Html.DisplayFor(modelItem => item.IsActive)<span></span>
                                            </td>

                                            <td title="@(item.Building.IsActive ? "Edit" :"Associate building is not active")">
                                                <img class="@(item.Building.IsActive? "floors-editplan":"floors-editplan disable")"
                                                     onclick="location.href ='@Url.Action("editfloor", "Organization", new { fid = item.FloorId })'"
                                                     src="@Url.Content("~/dist/Images/Icons/edit_button2.png")"
                                                     title="Edit" alt="Edit" />
                                            </td>
                                            <td title="History">
                                                <img onclick="location.href ='@Url.RouteUrl("floorplanhistory", new { floorId = item.FloorId })'" src="~/dist/img/icon3.png" title="History" alt="History" />
                                            </td>
                                            <td style="display:none">
                                                @item.BuildingId
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                       
                    </div>
                </div>
            </div>
        </div>
        </div>
    

<script>
    function DeleteProperty() {
        return confirm('Are you sure you wish to delete this floor?');
    }

    // Add custom JS here
    $('a[rel=popover]').popover({
        html: true,
        animated: 'fade',
        trigger: 'hover',
        placement: 'left',
        content: function () { return '<img height="250" width="250" src="' + $(this).data('img') + '" />'; }
    });

    $(document).ready(function () {
        var dTable = $('#floorTbl').DataTable({
            searching: true,
            pageLength: 20,
            lengthChange: false,
            bPaginate: $('#floorTbl tbody tr').length > 20,
            bInfo: false,
            aaSorting: [],
            language: {
                emptyTable: "No data available in table",
                search: "_INPUT_", //To remove Search Label
                searchPlaceholder: "Search..."
            },
            aoColumnDefs: [
                {
                    orderSequence: ["desc", "asc"],
                    aTargets: ['_all']
                }
            ],
          

            initComplete: function () {
            $("div.toolbar").html('<div class="add-commanBtn"><a href="@(Url.Action("add", "floor"))" class= "pull-right" ><img src="/dist/Images/Icons/3d_add_button.png" title="Add Floor" alt="3d_add_button"></a></div >');
        },
            dom: "<'row'<'col-sm-2'><'col-sm-2'l><'col-sm-8 tableactions'flp <'toolbar'>>>" + "<'row'<'col-md-12'<'table-responsive'tr> > >" + "<'row'<'col-sm-12 text-right'p>>",


        });


        $('#buildings').on('change', function () {
            debugger;
            var buildingId = $(this).val();
            if (buildingId > 0) {
                dTable.column(7).search("^" + buildingId + "$", true, true, true, false).draw();
            }
            else
                dTable.columns(7).search("").draw();

        });
    });
        

</script>
