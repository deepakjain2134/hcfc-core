@model HCF.BDO.Organization
@{
    /**/

    ViewBag.Title = "Permit Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section pageHeader{
    <section class="content-header">
        <h1>
            Permit Settings
        </h1>
    </section>
}
<div class="container-fluid">
    <div class="row">
        <div class="settingnewBox">
            @await Html.PartialAsync("_MoreConfig")
            <div class="rightcol-setting">
                <div class="box box-primary col-lg-12" id="Setting_Content">
                    @using (Html.BeginForm("General", "Organization", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.OrganizationId)
                        <div class="banner-setting update_banner">
                            @*@Html.Image(Model.DashBoadImagePath, Model.Name, "img")*@
                            <image src="@Model.DashBoadImagePath" title="@Model.Name" class="img"></image>

                            <div class="upload_image">Upload Image</div><input type="file" name="file" id="file" />
                            <input class="cancel_upload_image" type="button" value="x" />
                        </div>

                        <div class="dl-horizontal general_setting">

                            <div class="crxgeneral-details">

                                <div class="shownotifi-row">
                                    <button type="button" class="comm-button" data-toggle="collapse" data-target="#demo">Show Notice Text</button>
                                    <div id="demo" class="collapse">
                                        <div class="form-group">
                                            <h4 class="notice-heading">Notice Text</h4>
                                            @*<label class="dNoticeText">@Model.NoticeText</label>*@
                                            <div class="tnoticetext">
                                                @Html.TextAreaFor(x => x.NoticeText, new { @class = "form-control NoticeText", placeholder = "Enter Notice Text" })
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>
                            <div class="crxgeneral-btnBox">
                                <input type="button" value="Edit" class="comm-button" id="upda" />
                                <input type="submit" value="Save" class="comm-button" id="sav" />
                                @Html.ActionLink("Cancel ", "PermitSettings", "Permit", new { @class = "comm-Cancelbutton can" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="@Url.Content("~/dist/Scripts/ckeditor/ckeditor.js")" type="text/javascript"></script>

    <style>
        .cancel_upload_image {
            display: none;
            position: absolute;
            right: -10px;
            top: -10px;
            z-index: 999;
            border-radius: 20px;
            border: none;
            width: 30px;
            height: 30px;
            color: #ffffff;
            font-size: 16px;
            background: #d82c3d;
            line-height: 20px;
        }

        .banner:hover .upload_image {
            display: inline-flex;
            vertical-align: middle;
        }

        span {
            display: inline;
        }

        .toggleBox {
            clear: both;
            display: inline-flex;
        }

        .toggle-crxbtn {
            width: 42px;
            height: 20px;
            border-radius: 50px;
            display: inline-block;
            position: relative;
            background: url('/dist/Images/Icons/close-toggle.png') no-repeat 26px center #e74c3c;
            cursor: pointer;
            -webkit-transition: background-color .40s ease-in-out;
            -moz-transition: background-color .40s ease-in-out;
            -o-transition: background-color .40s ease-in-out;
            transition: background-color .40s ease-in-out;
            cursor: pointer;
            background-size: 9px !important;
            margin-right: 4px;
        }

            .toggle-crxbtn .round-white {
                width: 14px;
                height: 14px;
                background-color: #fff;
                border-radius: 50%;
                display: inline-block;
                position: absolute;
                left: 5px;
                top: 15%;
                -webkit-transition: all .30s ease-in-out;
                -moz-transition: all .30s ease-in-out;
                -o-transition: all .30s ease-in-out;
                transition: all .30s ease-in-out;
            }

        .crx-value {
            margin: 0px 0 0 !important;
            position: absolute;
            left: 0;
            right: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            z-index: 9;
            cursor: pointer;
            -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
        }

        .toggle-crxbtn.active .round-white {
            left: 22px;
        }

        .toggle-crxbtn.active {
            background: url('/dist/Images/Icons/open-toggle.png') no-repeat 6px center #2ecc71;
            background-size: 12px !important;
        }
    </style>
    @*<script src="https://cdn.ckeditor.com/4.8.0/standard-all/ckeditor.js"></script>*@
    <script src="~/dist/Scripts/ckeditor/ckeditor.js"></script>



    <script>
    var initialDashboardFilePath = $('.img').attr('src');
    $("#FireWatchTimeSlot").val('@Model.FireWatchTimeSlot');

    var hospitalTypeId = '@Model.HospitalTypeId';
    $("#HospitalTypeId").val(hospitalTypeId);

    $('.img').click(function () { $('#file').trigger('click'); });
    $("#file").change(function () {

        var fileExtensionas = ['png', 'jpg'];
        var file = document.getElementById("file").files[0];
        console.log(file);
        var fileName = file.name;
        var fileExtension = fileName.substring(fileName.lastIndexOf('.') + 1);
        if ($.inArray(fileExtension, fileExtensionas) == -1) {
            $('#file').val("")
            swalalert("Only formats are allowed : " + fileExtensionas.join(', '));
        }
        else {
            var readImg = new FileReader();
            readImg.readAsDataURL(file);
            readImg.onload = function (e) {
                $('.img').attr('src', e.target.result).fadeIn();
            }
            $('.cancel_upload_image').show();
        }
    });
    $('.cancel_upload_image').click(function () {
        $('#file').val("")
        $('.img').attr('src', initialDashboardFilePath)
        $('.cancel_upload_image').hide();
    })

    $(document).ready(function () {
        $('.city').hide();
        $('.state').hide();
        $('.country').hide();
        $('.zip').hide();
        $('#sav').hide();
        $('.can').hide();
        $('.hideinputcntrl').hide();

        CKEDITOR.replace('NoticeText');
        //CKEDITOR.replace('NoticeText', {
        //    customConfig: '/ckeditor_settings/config.js'
        //});
        $('.tnoticetext').addClass("disable");

        debugger;
            var mainParent = $('.crx-value').parent('.toggle-crxbtn');
        var isActive = '@Model.IsTaggingEnabled';
        if (isActive == 'True') {
            $(mainParent).addClass('active');
            $('#IsTaggingEnabled').addClass('active');
            $("#hdnIsPermitTag").val(true);
        } else {
            $(mainParent).removeClass('active');
            $('#IsTaggingEnabled').removeClass('active');
            $("#hdnIsPermitTag").val(false);
        }
    });

    $('#upda').click(function () {
        $('.discity').hide();
        $('.disstate').hide();
        $('.discountry').hide();
        $('.diszip').hide();
        $('.dNoticeText').hide();
        $('.tnoticetext').removeClass("disable");
        $('.city').show();
        $('.state').show();
        $('.country').show();
        $('.zip').show();
        $('#sav').show();
        $('.can').show();
        $('.hideinputcntrl').show();
        $(".hidelblcntrl").hide();
        $('#upda').hide();
        //$("#divtagging").show();

        debugger;
    });


    $('input[name="IsTagging"]').click(function () {
        debugger;
        var mainParent = $('.crx-value').parent('.toggle-crxbtn');
        var status = false;

        if ($('.crx-value').hasClass('active')) {
            status = false;
        } else {
            status = true;
        }
        if(status == true) {
            $(mainParent).addClass('active');
            $('#IsTaggingEnabled').addClass('active');
            $("#hdnIsPermitTag").val(true);
        } else {
            $(mainParent).removeClass('active');
            $('#IsTaggingEnabled').removeClass('active');
            $("#hdnIsPermitTag").val(false);
        }

    });

    </script>
}