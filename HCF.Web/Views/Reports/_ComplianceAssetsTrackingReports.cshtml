@using HCF.BDO
<div>
   
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="table-responsive compliance-assetmatrix">
            <table class="table table-bordered" id="trackingassetTbl">
                @{
                    var sites = ViewBag.Site;
                    List<Buildings> Buildings = ViewBag.Buildings;
                    var assettypes = ViewBag.assettype;
                    List<Assets> assets = ViewBag.assets;
                    List<AssetComplianceMatrix> results = ViewBag.results;
                }
                <thead id="trackingassethead">
                    <tr>
                        <th class="AssetsFixedXY" style="z-index:999;"></th>
                        <th>
                            <table class="table-bordered">
                                <tr class="trackingTop">
                                    <th class="cam-buldingSize">Campus/Buildings</th>
                                    @foreach (var site in sites)
                                    {
                                        var buildings = Buildings.Where(x => x.SiteCode == site.Code).ToList();
                                        if (buildings.Count > 0)
                                        {
                                            <th site_id="@site.Code">
                                                <div class="horizontal-mode"><span>@site.Name</span></div>
                                                <table class="table table-bordered">
                                                    <tr>
                                                        @foreach (var build in buildings)
                                                        {
                                                            <th building-id="@build.BuildingId" width="10%">
                                                                <div class="horizontal-mode"><span>@build.BuildingName</span></div>
                                                            </th>
                                                        }
                                                    </tr>
                                                </table>
                                            </th>
                                        }
                                    }
                                </tr>
                            </table>
                        </th>
                    </tr>
                </thead>
                <tbody id="" class="matrixinner-table">
                    @foreach (var assettype in assettypes)
                    {
                        <tr>
                            <th class="matrixinner-fixed">
                                <div class="horizontal-mode"><span>@assettype.Name</span></div>
                            </th>
                            <td>
                                <table class="table-bordered buildings1-table">
                                    @foreach (var asset in assets.Where(x => x.AssetTypeId == assettype.TypeId))
                                    {
                                        <tr>
                                            <td class="assetsName">
                                                <div class="horizontal-mode"><span>@asset.Name</span></div>
                                            </td>
                                            @foreach (var site in sites)
                                            {
                                                var buildings = Buildings.Where(x => x.SiteCode == site.Code).ToList();
                                                if (buildings.Count > 0)
                                                {
                                                    <td>
                                                        <table class="table-bordered">
                                                            <tr>
                                                                @foreach (var build in buildings)
                                                                {
                                                                    var data = results.Where(x => x.BuildingId == build.BuildingId && x.AssetId == asset.AssetId).ToList();
                                                                    if (data.Count > 0)
                                                                    {
                                                                        <td>
                                                                            @foreach (var item in data)
                                                                            {
                                                                                if (item.AssetCount == item.InspectedAsset)
                                                                                {
                                                                                    <div class="horizontal-mode">
                                                                                        <span>
                                                                                            <a href="@Url.Action("EpInspections", "Goal", new { epId = item.StandardEps.EPDetailId })">
                                                                                                <img class="dinIons" src="/dist/Images/Icons/upcoming_point.png" />
                                                                                                @item.StandardEps.StandardEP
                                                                                            </a>
                                                                                        </span>
                                                                                    </div>
                                                                                }
                                                                                else if (item.InspectedAsset > 0)
                                                                                {
                                                                                    <div class="horizontal-mode">
                                                                                        <span>
                                                                                            <a href="@Url.Action("EpInspections", "Goal", new { epId = item.StandardEps.EPDetailId })">
                                                                                                <img class="dinIons" src="/dist/Images/Icons/inprogress_point.png" />
                                                                                                @string.Format("[{0}]", (item.AssetCount - item.InspectedAsset)) @item.StandardEps.StandardEP
                                                                                            </a>
                                                                                        </span>
                                                                                    </div>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <div class="horizontal-mode">
                                                                                        <span>
                                                                                            <a href="@Url.Action("EpInspections", "Goal", new { epId = item.StandardEps.EPDetailId })">
                                                                                                <img class="dinIons" src="/dist/Images/Icons/past_due_point.png" />
                                                                                            </a>
                                                                                            @item.StandardEps.StandardEP
                                                                                        </span>
                                                                                    </div>
                                                                                }
                                                                            }
                                                                        </td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td>NA</td>
                                                                    }
                                                                }
                                                            </tr>
                                                        </table>
                                                    </td>
                                                }
                                            }
                                        </tr>
                                    }
                                </table>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="modal fade" id="AddAssetsPopup" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" id="loadpartial">

    </div>
</div>

<style>
    .AssetsFixedXY {
        z-index: 999;
    }
    .vertical-mode {
        font-size: 13px;
    }
    #loadpartial {
        width: 90%;
        display: inherit;
        clear: both;
        top: 5em;
    }
    .trackingTop .table {
        margin-bottom: 0;
    }
    #trackingassethead .cam-buldingSize {
        min-width: 180px;
        width: 180px;
        position: sticky !important;
        left: 176px !important;
        z-index: 9999 !important;
        vertical-align: middle !important;
    }
    #trackingassethead tr th {
        padding: 4px !important;
        min-width: 180px;
        position: sticky;
        left: -2px;
        background-color: #f5f5f5;
        z-index: 99;
        text-align: left;
        font-size: 12px;
        text-transform: uppercase;
    }

    .table-responsive.compliance-assetmatrix {
        max-height: 460px;
        border: 1px solid #ddd;
        padding-left: 0px;
        padding-right: 0px;
        margin-top: 0px;
        overflow:auto;
    }
        .table-responsive.compliance-assetmatrix .table {
            margin-bottom: 0px;
            margin-top: 0px;
        }

    #trackingassetTbl .table-bordered {
        width: 100%;
    }

    .compliance-assetmatrix td {
        /*min-width: 56px;*/
        vertical-align: middle;
        padding: 4px 4px !important;
    }
    .matrixinner-table td {
        min-width: 187px !important;
    }
    .compliance-assetmatrix th {
        position: sticky !important;
        top: -4px;
        background-color: #f5f5f5;
        z-index: 9;
        vertical-align: bottom !important;
        font-size: 12px !important;
        text-transform: uppercase;
        left: -2px !important;
    }

    .matrixinner-fixed {
        position: sticky !important;
        left: -1px;
        background-color: #f5f5f5;
        z-index: 9;
        vertical-align: bottom !important;
    }
    .buildings1-table .assetsName {
        width: 180px;
        min-width: 180px !important;
        position: sticky !important;
        left: 176px;
        background-color: #fbfbfb;
        z-index: 9 !important;
        font-size: 12px;
        font-weight: 600;
    }
</style>