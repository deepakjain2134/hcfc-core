@model IEnumerable<HCF.BDO.InspectionReport>

<table id="inspectionTable" class="table table-bordered table-striped" width="100%" border="0" cellspacing="0" cellpadding="0">
    <thead>
        <tr>
            <th width="10%" onclick="SetInspectionSortingOrder('StandardEP')" class="sorting1" id="IStandardEP">Standard</th>
            <th width="10%">Responsible</th>
            @*<th width="4%">Year</th>*@
            @*<th width="7%">Frequency</th>*@
            <th colspan="4" title="January">J</th>
            <th colspan="4" title="February">F</th>
            <th colspan="4" title="March">M</th>
            <th colspan="4" title="April">A</th>
            <th colspan="4" title="May">M</th>
            <th colspan="4" title="June">J</th>
            <th colspan="4" title="July">J</th>
            <th colspan="4" title="August">A</th>
            <th colspan="4" title="September">S</th>
            <th colspan="4" title="October">O</th>
            <th colspan="4" title="November"> N</th>
            <th colspan="4" title="December">D</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var count = 0;
            int colSpanCount = 12;
            foreach (var yr in item.Years.Where(x => x.YearId == 1).OrderBy(x => x.YearId))
            {
                <tr>
                    @if (count == 0)
                    {
                        <td rowspan="1">
                            @item.StandardEp
                            <br />
                            @foreach (var fre in item.EPFrequency)
                            {
                                if (item.EPFrequency.Count > 1)
                                {
                                    if (fre.Frequency.Days < 366 && fre.Frequency.Days > 0)
                                    {
                                        colSpanCount = 365 / fre.Frequency.Days;
                                    }

                                    <span>@($"{fre.Frequency.DisplayName},")</span>
                                }
                                else
                                {

                                    if (fre.Frequency.Days < 366 && fre.Frequency.Days > 0)
                                    {
                                        colSpanCount = 365 / fre.Frequency.Days;
                                    }
                                    <span>@fre.Frequency.DisplayName</span>
                                }
                            }
                            @foreach (var asset in item.Assets)
                            {
                                <br />
                                @asset.Name
                            }
                            <br />
                        </td>
                        <td rowspan="1">
                            <a href="@Url.Action("EpUserView", "Common", new { epDetailId = item.EPDetailId, standardEP = item.StandardEp })"
                               class="modal-link">
                                @{
                                    colSpanCount = (colSpanCount == 52) ? 48 : colSpanCount;
                                    List<HCF.BDO.UserProfile> users = commonModelFactory.RemoveCRxUsers(item.EPUsers);
                                    if (users.Count > 0)
                                    {

                                        if (users.Count > 1)
                                        {
                                            <span>@($"{users[0].FullName}{" + "}{item.EPUsers.Count - 1}{" More"}")</span>
                                        }
                                        else
                                        {
                                            <span>
                                                @users.FirstOrDefault().FullName
                                            </span>
                                        }
                                    }
                                }
                            </a>
                        </td>
                    }



                    @for (int i = 0; i < colSpanCount; i++)
                    {
                        <td colspan="@string.Format("{0}",48/colSpanCount)"></td>
                    }


                  



                </tr>
                count++;
            }
            <tr>
                <td colspan="50"></td>
            </tr>
        }
    </tbody>
</table>


<style>
    .year_0 {
        background: yellow;
    }

    .year_1 {
        background: #9ae422;
    }

    .year_2 {
        background: #ffd400;
    }

    .False {
        cursor: not-allowed;
    }

    .duePassed {
        background: red !important;
    }

    .dueDatePass, .duemonth {
        background: red !important;
    }
</style>

@functions{

    public static string GetClass(DateTime boxDateTime, DateTime dueDate, DateTime inspectionDate)
    {
        if (boxDateTime.Month == inspectionDate.Month && boxDateTime.Year == inspectionDate.Year)
        {
            return "active";
        }

        if (boxDateTime.Month == dueDate.Month && boxDateTime.Year == dueDate.Year)
        {
            return "duemonth";
        }

        if (boxDateTime > dueDate && boxDateTime < DateTime.UtcNow)
        {
            return "dueDatePass";
        }
        //boxDateTime = dueDate  retrun textboxclass
        //boxtime >   dueDate but less than current date
        //boxdatetime = inspectionDate
        return "";
    }

}
<script src="//cdn.datatables.net/plug-ins/1.10.7/pagination/select.js"></script>
<script src="@Url.Content("~/dist/js/numericInput.min.js")"></script>

<script>
    $(".numeric").numericInput();

    $(document).ready(function () {
        $.fn.dataTable.ext.errMode = 'none';
        $('#inspectionTable').on('error.dt', function (e, settings, techNote, message) { console.log('An error occurred: ', message); });
        var inspectionTable = $('#inspectionTable').DataTable({
            "lengthChange": false,
            "bPaginate": $('#inspectionTable tbody tr').length > 40,
            "bInfo": false,
            "aaSorting": [],
            "ordering": false,
            "pageLength": 40,//"displayStart": 20,
            "pagingType": "listbox",
            "language": {
                "emptyTable": "No data available in table"
            },
            dom: "<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>" +
                 "<'row'<'col-sm-12'tr>>" +
                 "<'row'<'col-sm-5'i><'col-sm-7'p>>"
        });

        $('#lastpage').on('click', function () {
            var pagenUmber = $("#pagNumber").val();
            inspectionTable.page(pagenUmber).draw(true);
        });

    });

    $('.dt-button.buttons-pdf.buttons-html5').attr('title', 'Download PDF');
    $('.dt-button.buttons-excel.buttons-html5').attr('title', 'Download Excel');

    function getTheDays(year, month) {
        month = month - 1;
        var firstDay = 1;
        var lastDay = 0;
        var FirstDay = new Date(year, month, 1);
        var LastDay = new Date(year, month + 1, 0);
        lastDay = LastDay.getDate();
        firstDay = FirstDay.getDay();
        return lastDay;
    }


    function SaveData(control, year, month, epDetailld, count) {
        var lastDay = getTheDays(year, month);
      //  console.log(lastDay);
        if (control.value != "") {
            var date = control.value;
            if (date > 0 && date <= lastDay) {
                var tdId = "td_" + control.id;
                var url = '@Url.Action("SaveInspectionDate", "Reports")';
                $.post(url, { __RequestVerificationToken: $('input[name=' + $.Constants.RequestVerificationToken + ']').val(),date: date, year: year, month: month, epDetailld: epDetailld })
                    .done(function (data) {
                        $("#" + tdId).empty().text(control.value);
                        $("#" + tdId).addClass("year_" + count);
                    });
            } else {
                swalalert('day must be less than or equal ' + lastDay);
            }
        }
    }
</script>

