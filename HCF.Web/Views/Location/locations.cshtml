@model IEnumerable<HCF.BDO.StopMaster>
@using HCF.Web.Helpers
@{
    ViewBag.Title = "Locations";
}


    @section pageHeader{
    <section class="content-header">
        <h1>
            Stops
        </h1>
    </section>
        }
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12 settingnewBox">
                @await Html.PartialAsync("_MoreConfig")
                <div class="rightcol-setting">
                    <div class="box box-primary">
                        <div class="row tablelist-topform">
                            <div class="col-md-4 form-group">
                                <buildingdropdownList name="buildingDDL"
                                                      selectedvalue="0" firsttext="Select Building" class="form-control ddlbox" required="required"></buildingdropdownList>
                            </div>
                            @*<div class="col-md-8">
                                <a href='@(Url.Action("mngLocation", "Location"))' class="pull-right addbtnlocation">
                                    <img src="@Url.Content(HCF.Web.Models.ImagePathModel.AddIcon)" title="Add new stop" alt="3d_add_button" />
                                </a>
                            </div>*@
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <table id="locationTbl" class="table table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th style="display:none"></th>
                                            <th style="display:none"></th>
                                            <th> @Html.DisplayNameFor(model => model.Floor.Building.BuildingName)</th>
                                            <th> @Html.DisplayNameFor(model => model.Floor.FloorName)</th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.StopName)
                                            </th>
                                            <th> @Html.DisplayNameFor(model => model.StopCode)</th>
                                            <th>
                                                Active
                                            </th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.OrderBy(x => x.Floor.Building.BuildingName).ThenBy(x => x.Floor.FloorName))
                                        {
                                            <tr>
                                                <td style="display:none">  @item.Floor.BuildingId</td>
                                                <td style="display:none"> @item.Floor.FloorId</td>
                                                <td>
                                                    @item.Floor.Building.BuildingName
                                                </td>
                                                <td>
                                                    @item.Floor.FloorName
                                                </td>
                                                <td>
                                                    @Html.HiddenFor(modelItem => item.StopId)
                                                    @Html.DisplayFor(modelItem => item.StopName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.StopCode)
                                                </td>
                                                <td class="comman_checkbox1">
                                                    @Html.DisplayFor(modelItem => item.IsActive)<span></span>
                                                </td>
                                                <td>
                                                    <img onclick="location.href='@Url.Action("mngLocation","Location", new { locationId = item.StopId })'"
                                                         src="@Url.Content("~/dist/Images/Icons/edit_button2.png")"
                                                         title="Edit" />
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script>


    $(document).ready(function () {

        var dTable = $('#locationTbl').DataTable({
            searching: true,
            pageLength: 20,
            lengthChange: false,
            bPaginate: $('#locationTbl tbody tr').length > 20,
            bInfo: false,
            aaSorting: [],
            language: {
                emptyTable: "No data available in table",
                search: "_INPUT_", //To remove Search Label
                searchPlaceholder: "Search..."
            },
            aoColumnDefs: [
                {
                    orderSequence: ["desc", "asc"],
                    aTargets: ['_all']
                }
            ],
            //dom: "<'row'<'col-sm-12'f p>>" +
            //    "<'row'<'col-sm-12'<'table-responsive'tr>>>" +
            //    "<'row'<'col-sm-5'i><'col-sm-7'p>>Blfrtip",

            

             initComplete: function () {
                 $("div.toolbar").html('<div class="add-commanBtn"><a href="@(Url.Action("mngLocation", "Location"))" class= "pull-right" ><img src="/dist/Images/Icons/3d_add_button.png" title="Add New Stop" alt="3d_add_button"></a></div >');
        },
            dom: "<'row'<'col-sm-2'B><'col-sm-2'l><'col-sm-8 tableactions'flp <'toolbar'>>>" + "<'row'<'col-md-12'<'table-responsive'tr> > >" + "<'row'<'col-sm-12 text-right'p>>",




            buttons: [
                {
                    extend: 'pdfHtml5',
                    orientation: 'portrait',
                    title: 'Location Report',
                    exportOptions: {
                        columns: [2, 3, 4, 5]
                    },
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    customize: function (doc) {
                        doc.content.splice(0, 1);
                        var now = new Date();
                        var jsDate = setDateFormat(now);
                        var logo = localStorage.getItem("logoimgbase64");//getBase64FromImageUrl();
                        doc.pageMargins = [20, 60, 20, 30];
                        doc.defaultStyle.fontSize = 8;
                        doc.styles.tableHeader.fontSize = 7;
                        doc['header'] = (function () {
                            return {
                                columns: [
                                    { image: logo, width: 40 },
                                    {
                                        alignment: 'left',
                                        italics: true,
                                        text: getOrgName('@HCF.Web.Base.UserSession.CurrentOrg.Name'), @*text: '@HCF.Web.Base.UserSession.CurrentOrg.Name',*@
                                        fontSize: 14,
                                        margin: [0, 6, 0, 0],
                                        width: 200,
                                    },
                                    {
                                        alignment: 'middle',
                                        fontSize: 14,
                                        text: 'Location Report',
                                        margin: [0, 6, 0, 0]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        doc['footer'] = (function (page, pages) {
                            return {
                                columns: [
                                    {
                                        alignment: 'left',
                                        text: ['Generated from CRx on ', { text: jsDate.toString() }]
                                    },
                                    {
                                        alignment: 'center',
                                        text: ['Page ', { text: page.toString() }, ' of ', { text: pages.toString() }]
                                    },
                                    {
                                        alignment: 'right',
                                        text: ['Generated by: ', { text: '@HCF.Web.Base.UserSession.CurrentUser.Name'} ]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        var objLayout = {};
                        objLayout['hLineWidth'] = function (i) { return .5; };
                        objLayout['vLineWidth'] = function (i) { return .5; };
                        objLayout['hLineColor'] = function (i) { return '#aaa'; };
                        objLayout['vLineColor'] = function (i) { return '#aaa'; };
                        objLayout['paddingLeft'] = function (i) { return 4; };
                        objLayout['paddingRight'] = function (i) { return 4; };
                        doc.content[0].layout = objLayout;
                    }
                },
                {
                    extend: 'excel',
                    title: 'Location Report',
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    exportOptions: {
                        columns: [2,3,4,5],
                        orthogonal: 'export'
                    }
                }
            ]
    });

        $(document).ready(function () {
            HideTableSorting();
            DisableDefaultDTfp();
            $('#locationTbl thead').click(function () {
                HideTableSorting();
            });
            $('.dt-button.buttons-pdf.buttons-html5').attr('title', 'Download PDF');
            $('.dt-button.buttons-excel.buttons-html5').attr('title', 'Download Excel');
        });

        function HideTableSorting() {
            $('#locationTbl th[aria-label*="Status"]').removeClass('sorting');
            $('#locationTbl th[aria-label*="Action"]').removeClass('sorting');
        }

        function DisableDefaultDTfp() {
            debugger;
            const filterEl = $(".dataTables_filter input[type='search']")[1];
            const paginationEl = $("div.dataTables_paginate.paging_simple_numbers")[1];
            $(filterEl).css("display", "none");
            $(paginationEl).css("display", "none");
        }

        $("#buildingDDL").change(function () {
            debugger;
            var buildingId = $(this).val();
            if (buildingId > 0) {
                dTable.column(0).search("^" + buildingId + "$", true, true, false).draw();
            }
            else
                dTable.columns(0).search("").draw();
        });
    });

    </script>
