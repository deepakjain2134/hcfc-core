@model HCF.BDO.FireDrillQuestionnaires

    @section pageHeader{
    <section class="content-header">
        <h1>
            Add FireDrill Questionnaire
        </h1>
    </section>
        }
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12 settingnewBox">
                @await Html.PartialAsync("_MoreConfig")

                <div class="rightcol-setting">
                    <div class="box box-primary">
                        @using (Html.BeginForm("ManageQuestionnaires", "Rounds", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(x => x.FireDrillQuesId)
                            
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    Firedrill Category<em class="required-field"> *</em>
                                    @if (Model.FireDrillQuesId == 0)
                                    {
                                        @Html.DropDownListFor(m => m.FireDrillCatId, new SelectList(ViewBag.FireDrillCategory, "FireDrillCatId", "CategoryName", ViewBag.firedrillcatid as string, Convert.ToString(Model.FireDrillCatId)),
                                           "Select Category",
                                         new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.FireDrillCatId)
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(m => m.FireDrillCatId, new SelectList(ViewBag.FireDrillCategory, "FireDrillCatId", "CategoryName", Model.FireDrillCatId),
                                           "Select Category",
                                         new { @class = "form-control disabled", required = "required" })
                                        @Html.ValidationMessageFor(model => model.FireDrillCatId)
                                    }
                                </div>
                                <div class="form-group comman_checkbox">
                                    Active
                                    @*@Html.LabelFor(m => m.IsActive)*@
                                    @Html.CheckBoxFor(m => m.IsActive, true)<span></span>
                                    @Html.ValidationMessageFor(m => m.IsActive)
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    Questionnarie<em class="required-field"> *</em>
                                    @*@Html.LabelFor(model => model.Questionnaries)<em class="required-field"> *</em>*@
                                    @Html.TextAreaFor(model => model.Questionnaries, new { @class = "form-control", required = "required", @maxlength = "500", oninput = "validate(this)" })
                                    @Html.ValidationMessageFor(model => model.Questionnaries)
                                </div>
                            </div>
                            <div class="col-md-12 text-right button_Div">
                                <input type="submit" value='Save' class="comm-button" />
                                @Html.ActionLink("Cancel ", "FireDrillQuestionnaries", "Rounds", new { @class = "comm-Cancelbutton" })
                            </div>
                        </div>
                                
                           
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>


<script>
    $(document).ready(function () {
        var value = '@ViewBag.CmnfireDrillCatId'
        if (value != "") {
            $('#FireDrillCatId').val(value);
        }

    });

    function validate(input) {
        if (/^\s/.test(input.value))
            input.value = '';
    }

   

</script>