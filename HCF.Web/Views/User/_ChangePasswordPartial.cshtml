@model HCF.Web.ViewModels.Users.LocalPasswordModel


<script>


    function onsucess(data) {
       // console.log(data);
        var result = data.Result;
        if (result) {
            $(".form-control").val();
            window.setTimeout(function () {
                window.location.href = '@Url.RouteUrl("login")';
            }, 80000);
            swal({
                html: true,
                title: "Message",
                text: "<label>Password has been changed successfully.</label>",
                type: "success",
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "OK",
                closeOnConfirm: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        window.location.href = '@Url.Action("LogOff", "Account")';
                    }
                });

        } else {
            AlertWarningMsg(data.Messages);
        }
    }
</script>
@*@using (Ajax.BeginForm("Manage", "User", new AjaxOptions
    {
        OnSuccess = "onsucess"

    }))
    {*@
<form asp-controller="User" asp-action="Manage"
      UpdateTargetId="searchResults" data-ajax-success="onsucess"
      data-ajax="true" data-ajax-method="POST">


    @Html.AntiForgeryToken()


    <div class="container-fluid">
        <div class="row">

            <div class="box box-primary">

                <div>
                    @if (Model != null && !string.IsNullOrEmpty(Model.PasswordChangeMessage))
                    {
                        <p class="epFreq-alert">
                            @Model.PasswordChangeMessage
                        </p>
                    }
                </div>
                <div class="generateBox">
                    <div class="change_password">
                        <ul>
                            <li>
                                @Html.LabelFor(m => m.OldPassword)<em class="required-field"> *</em>
                                <div class="form-group has-feedback">
                                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", required = "required", maxlength = 25 })
                                    <span class="hideShowpass" id="hideShow1"><i class="fa fa-eye" aria-hidden="true"></i></span>

                                </div>
                                @Html.ValidationMessageFor(m => m.OldPassword)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.NewPassword)<em class="required-field"> *</em>
                                <div class="form-group has-feedback">
                                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control password-strength", required = "required", autocomplete = "false" })
                                    <span class="hideShowpass" id="hideShow2"><i class="fa fa-eye" aria-hidden="true"></i></span>

                                </div>
                                @Html.ValidationMessageFor(m => m.NewPassword)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.ConfirmPassword)<em class="required-field"> *</em>
                                <div class="form-group has-feedback">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control confirm-password-verify", required = "required", autocomplete = "false" })
                                    <span class="hideShowpass" id="hideShow3"><i class="fa fa-eye" aria-hidden="true"></i></span>

                                </div>
                                @Html.ValidationMessageFor(m => m.ConfirmPassword)
                            </li>
                        </ul>
                        <button type="submit" class="btn comm-button changepbtn float-right" id="changePassword" title="Change password">Change password</button>
                    </div>
                </div>

            </div>

        </div>
    </div>

</form>


<script>
    $(document).ready(function () {
        $("#hideShow1").on('click', function () {
            var $pwd = $("#OldPassword");
            if ($pwd.attr('type') === 'password') {
                $pwd.attr('type', 'text');
            } else {
                $pwd.attr('type', 'password');
            }
        });
        $("#hideShow1").click(function () {
            $("#hideShow1 .fa").toggleClass("fa-eye-slash");
        });
        $("#hideShow2").on('click', function () {
            var $pwd = $("#NewPassword");
            if ($pwd.attr('type') === 'password') {
                $pwd.attr('type', 'text');
            } else {
                $pwd.attr('type', 'password');
            }
        });
        $("#hideShow2").click(function () {
            $("#hideShow2 .fa").toggleClass("fa-eye-slash");
        });
        $("#hideShow3").on('click', function () {
            var $pwd = $("#ConfirmPassword");
            if ($pwd.attr('type') === 'password') {
                $pwd.attr('type', 'text');
            } else {
                $pwd.attr('type', 'password');
            }
        });
        $("#hideShow3").click(function () {
            $("#hideShow3 .fa").toggleClass("fa-eye-slash");
        });

       // $('.top_menu').hide();
      //  $('.breadcrumb').hide();
    });
</script>
