@model HCF.BDO.BinderFolders
@*@using (Ajax.BeginForm("EditFileFolder", "Documents", new AjaxOptions { OnSuccess = "OnBinderSuccess" }))
{*@

<form asp-controller="Documents" asp-action="EditFileFolder"
      data-ajax-success="OnBinderSuccess" data-ajax="true" data-ajax-method="POST">

    <div class="modal-header">
        <h4 class="modal-title">
            <span class="modelTitle">Edit Binder Folder</span>
            <button type="button" class="close" data-dismiss="modal">&times;</button>
        </h4>
    </div>
    <div class="modal-body">
        @Html.AntiForgeryToken()
        <div class="row validBox">
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.FolderId)
            <div class="form-group col-md-9">
                <label>Common Document Name <em class="required-field">*</em></label>
                @Html.TextBoxFor(model => model.CommonName, null, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.CommonName)
            </div>
            <div class="form-group validBox col-md-3">
                <label>Date expires <em class="required-field">*</em></label>
                @Html.TextBoxFor(model => model.ValidUpTo, $"{Model.ValidUpTo:MMM d, yyyy}", new
                {
               @class = "form-control datepicker readonly",
                    @autocomplete = "off",
               required = "required"
                })
                @Html.ValidationMessageFor(model => model.ValidUpTo)

            </div>
        </div>
    </div>
    <div class="modal-footer">
        <input type="submit" value="Save" class="comm-button" />
        <button type="button" class="comm-Cancelbutton" data-dismiss="modal">Cancel</button>
    </div>
    @*}*@
</form>
    <script>

        $(".datepicker").datepicker({
            showOn: "both",
            buttonImage: ImgUrls.datepicker_calendar,
            buttonImageOnly: true,
            dateFormat: $.CRx_DateFormat,
            minDate: 0,
            beforeShow: changeYearButtons,
            onChangeMonthYear: changeYearButtons
            //dateFormat: 'MMM d, yyyy'
        });

        $('#ValidUpTo').on('change invalid', function () {
            var textfield = $(this).get(0);
            textfield.setCustomValidity('');
        });

    </script>
  
