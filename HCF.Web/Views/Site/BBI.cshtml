@model List<HCF.BDO.Site>
    @{
        ViewBag.Title = "BBI Tracking";
        Layout = "~/Views/Shared/_Layout.cshtml";
        var itemcount = 0;
        var formname = "bbi";
    }
    

   
        @section pageHeader{
        <section class="content-header">
            <h1>
               BBI Tracking
            </h1>
        </section>
            }
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12 settingnewBox">
                    @await Html.PartialAsync("_MoreConfig")
                    <div class="rightcol-setting">
                        <div class="box box-primary" id="content">
                            <div class="col-lg-12 col-xs-12">
                                    <div class="">
                                        <h4 id="notificationfor">Sites and Buildings</h4>
                                        @*<a href="@Url.Action("PrintBBI", "PDF")" class="btn btn-success bbi-pdf" title="Download Pdf">
                                            Download Pdf

                                        </a>*@
                                        <a href="@Url.Action("PrintBBI", "PDF")" class="bbi-pdf" title="Download Pdf">
                                            <span>
                                                <img src="~/dist/Images/Icons/pdf_icon.png" title="Download Pdf" alt="" />
                                            </span>
                                        </a>
                                        <input type="hidden" name="mode" id="mode" value="c" />
                                        <input type="hidden" name="searchId" id="searchId" value="" />
                                        <div class="views" id="partialContents">                                          
                                            <div class="notification-menubox">
                                                <table id="bbitable" class="bbi-tableBox">

                                                    @foreach (var item in Model.Where(x => x.IsActive && x.Buildings.Where(y => y.IsActive).Any()).OrderBy(x => x.Name))
                                                    {
                                                        <thead>
                                                            <tr class="trborder">
                                                                <th colspan="2">Site</th>
                                                                <th colspan="3">Site Code</th>
                                                                <th colspan="3">Address</th>
                                                                <th colspan="3">City/State</th>


                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr class="trborder">
                                                                <td colspan="2"> @item.Name</td>
                                                                <td colspan="3"> @item.Code</td>
                                                                <td colspan="3">  @Html.DisplayFor(model => item.Address, null, new { @class = "form-control" })</td>
                                                                <td colspan="3">  @Html.DisplayFor(model => item.CityName, null, new { @class = "form-control" }) <span style="@((item.CityName!=null && item.CityName!="") && (item.StateName!=null && item.StateName!="")?"display:inline-block;;":"display:none;")">,</span> @Html.DisplayFor(model => item.StateName, null, new { @class = "form-control" })</td>

                                                            </tr>

                                                            <tr>
                                                                <th>Building</th>
                                                                <th>Building Code</th>
                                                                <th>Primary Occup. type</th>
                                                                <th>% Sqr. Ft.</th>
                                                                <th>% Renovated</th>
                                                                <th>Sq. Ft.</th>
                                                                <th>Beds</th>
                                                                <th>Sprinkled</th>
                                                                <th>Gov. Env. Susp</th>
                                                                <th># Open SPFI</th>
                                                                <th width="60px;">Action</th>
                                                            </tr>
                                                            @foreach (var building in item.Buildings.Where(x => x.IsActive).OrderBy(x => x.BuildingName))
                                                            {

                                                                {
                                                                    itemcount = itemcount + 1;
                                                                    formname = formname + itemcount;
                                                                }
                                                                <tr class="viewmode">

                                                                    <td>@building.BuildingName</td>
                                                                    <td>@building.BuildingCode</td>
                                                                    <td>@building.BuildingType.Name</td>
                                                                    <td>
                                                                        <input id="hdnPercentageSqrFt" type="hidden" value="@(building.BuildingDetails!=null && building.BuildingDetails.PercentageSqrFt!=null && building.BuildingDetails.PercentageSqrFt!=""?building.BuildingDetails.PercentageSqrFt:"")" />
                                                                        <input type="hidden" name="BuildingId" value="@building.BuildingId" />
                                                                        @Html.DisplayFor(model => building.BuildingDetails.PercentageSqrFt, null, new { @class = "form-control" })


                                                                    </td>
                                                                    <td>
                                                                        <input id="hdnPercentageRenovated" type="hidden" value="@(building.BuildingDetails!=null && building.BuildingDetails.PercentageRenovated!=null && building.BuildingDetails.PercentageRenovated!=""?building.BuildingDetails.PercentageRenovated:"")" />
                                                                        @Html.DisplayFor(model => building.BuildingDetails.PercentageRenovated, null, new { @class = "form-control" })
                                                                        <span style="@(building.BuildingDetails!=null &&  building.BuildingDetails.PercentageRenovated!=null && building.BuildingDetails.PercentageRenovated!=""?"display:inline-block;":"display:none;")">%</span>
                                                                    </td>
                                                                    <td>
                                                                        <input id="hdnSquareFtRange" type="hidden" value="@(building.BuildingDetails!=null && building.BuildingDetails.SquareFtRange!=null && building.BuildingDetails.SquareFtRange!=""?building.BuildingDetails.SquareFtRange:"")" />
                                                                        @Html.DisplayFor(model => building.BuildingDetails.SquareFtRange, null, new { @class = "form-control" })

                                                                    </td>
                                                                    <td>
                                                                        <input id="hdnBeds" type="hidden" value="@(building.BuildingDetails!=null && building.BuildingDetails.Beds!=null && building.BuildingDetails.Beds!=""?building.BuildingDetails.Beds:"")" />
                                                                        @Html.DisplayFor(model => building.BuildingDetails.Beds, null, new { @class = "form-control " })

                                                                    </td>
                                                                    <td>
                                                                        <input id="hdnSprinkled" type="hidden" value=" @(building.BuildingDetails != null && building.BuildingDetails.Sprinkled ? true :false)" />
                                                                        @(building.BuildingDetails != null && building.BuildingDetails.Sprinkled ? "Y" : "N")

                                                                    </td>
                                                                    <td>
                                                                        <input id="hdnGovEnvSusp" type="hidden" value=" @(building.BuildingDetails != null && building.BuildingDetails.GovEnvSusp ? true :false)" />
                                                                        @(building.BuildingDetails != null && building.BuildingDetails.GovEnvSusp ? "Y" : "N")

                                                                    </td>
                                                                    <td>
                                                                        <input id="hdnOpenSPFI" type="hidden" value="@(building.BuildingDetails!=null && building.BuildingDetails.OpenSPFI!=null && building.BuildingDetails.OpenSPFI!=""?building.BuildingDetails.OpenSPFI:"")" />
                                                                        @Html.DisplayFor(model => building.BuildingDetails.OpenSPFI, null, new { @class = "form-control" })

                                                                    </td>
                                                                    <td class="bbi-actioninons">
                                                                        <a onclick="EditBBI(this)">
                                                                            <span><img src="@Url.Content(HCF.Web.Models.ImagePathModel.EditIcon)" title="Edit" alt="3d_add_button" /></span>
                                                                        </a>
                                                                        <a data-id="@(building.BuildingDetails==null?0:building.BuildingDetails.BuildingDetailId) " class="deleteBBI" href="javascript:document.getElementById('@formname').submit()">

                                                                            @*<span>
                                                <img src="@Url.Content(HCF.Web.Models.ImagePathModel.DeleteIcon)" title="Delete" alt="" />
                                            </span>*@
                                                                        </a>

                                                                    </td>

                                                                </tr>
                                                                <tr class="editmode" style="display:none;">
                                                                    @using (Html.BeginForm("SaveBBI", "Site", FormMethod.Post, new { id = formname }))
                                                                    {
                                                                        <td>@building.BuildingName</td>
                                                                        <td>@building.BuildingCode</td>
                                                                        <td>@building.BuildingType.Name</td>
                                                                        <td>
                                                                            <input type="hidden" name="BuildingId" value="@building.BuildingId" />
                                                                            <input type="hidden" class="hdnSqtFtNotValid" value="1" />
                                                                            @Html.TextBoxFor(m => building.BuildingDetails.PercentageSqrFt, null, new { @class = "form-control percent numeric numberinput", maxlength = "20", required = "required", name = "PercentageSqrFt", @title = "Percentage must be between 1 to 100." })
                                                                        </td>
                                                                        <td>
                                                                            <input type="hidden" class="hdnRenovatednotvalid" value="1" />
                                                                            @Html.TextBoxFor(m => building.BuildingDetails.PercentageRenovated, null, new { @class = "form-control percentrange", maxlength = "20", required = "required", Name = "PercentageRenovated", @title = "Percentage Renovated must be between 1-100." })
                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(m => building.BuildingDetails.SquareFtRange, null, new { @class = "form-control restrictzero", maxlength = "20", required = "required", Name = "SquareFtRange" })
                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(m => building.BuildingDetails.Beds, null, new { @class = "form-control numeric restrictzero", maxlength = "20", required = "required", Name = "Beds", @title = "Beds must be numeric." })
                                                                        </td>
                                                                        <td>

                                                                            @Html.CheckBoxFor(x => building.BuildingDetails.Sprinkled, new { @class = "chBox", required = "required", Name = "Sprinkled" })<span></span>
                                                                        </td>
                                                                        <td>

                                                                            @Html.CheckBoxFor(x => building.BuildingDetails.GovEnvSusp, new { @class = "chBox", required = "required", Name = "GovEnvSusp" })<span></span>
                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(m => building.BuildingDetails.OpenSPFI, null, new { @class = "form-control numeric", maxlength = "20", required = "required", Name = "OpenSPFI", @title = "# Open SPFI must be numeric." })
                                                                        </td>
                                                                        <td class="cancel-bbitaction">
                                                                            <div class="bbisave">
                                                                                <a class="savetick" href="javascript:document.getElementById('@formname').submit()">

                                                                                    <span>
                                                                                        <img src="@Url.Content(HCF.Web.Models.ImagePathModel.TickIcon)" title="Save" alt="" />
                                                                                    </span>
                                                                                </a>
                                                                            </div>
                                                                            <a onclick="Cancel(this)">

                                                                                @*<span class="bbiCancel" style="color:#000;">
                                                    <strong>X</strong>

                                                </span>*@
                                                                                <span class="bbiCancel">
                                                                                    @*<img class="bbiCancel" src="@Url.Content(HCF.Web.Models.ImagePathModel.cross)" title="Cancel" alt="" />*@
                                                                                    <img class="bbiCancel" src="/dist/Images/Icons/close-black.png" title="Cancel" alt="" style="width: 16px;" />

                                                                                </span>
                                                                            </a>
                                                                        </td>
                                                                    }
                                                                </tr>


                                                            }

                                                        </tbody>
                                                    }
                                                </table>
                                            </div>

                                           
                                        </div>
                                    </div>
                               
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
   


    <input type="hidden" class="minValue" value="0" />
    <input type="hidden" class="maxValue" value="100" />
    <input type="hidden" class="formatValue" value="%" />
    <input type="hidden" class="recommendValue" value="100" />


   
    <script>


      
        $(document).ready(function () {
            $(".viewmode").show();
            $(".editmode").hide();
            $('.numberinput').keypress(function (e) {
                if (this.value.length == 0 && e.which == 48) {
                    return false;
                }
            });

            $("input[type=text]").each(function (i) {
                debugger;
                var ctrlname = $(this).attr('name').replace('building.BuildingDetails.', '');
                $(this).attr('name', ctrlname);
            });
            $("input[type=checkbox]").each(function (i) {
                debugger;
                var ctrlname = $(this).attr('name').replace('building.BuildingDetails.', '');
                $(this).attr('name', ctrlname);
            });
        });
        function EditBBI(thisobj) {
            $(thisobj).parent().parent("tr").hide();
            $(thisobj).parent().parent("tr").next("tr").show();

            var PercentageSqrFt = $(thisobj).parent().parent("tr").find("td:eq(3)").find("#hdnPercentageSqrFt").val();
            $(thisobj).parent().parent("tr").next("tr").find("td:eq(3)").find("input:text").val(PercentageSqrFt);

            var PercentageRenovated = $(thisobj).parent().parent("tr").find("td:eq(4)").find("#hdnPercentageRenovated").val();
            $(thisobj).parent().parent("tr").next("tr").find("td:eq(4)").find("input:text").val(PercentageRenovated);

            var SquareFtRange = $(thisobj).parent().parent("tr").find("td:eq(5)").find("#hdnSquareFtRange").val();
            $(thisobj).parent().parent("tr").next("tr").find("td:eq(5)").find("input:text").val(SquareFtRange);

            var Beds = $(thisobj).parent().parent("tr").find("td:eq(6)").find("#hdnBeds").val();
            $(thisobj).parent().parent("tr").next("tr").find("td:eq(6)").find("input:text").val(Beds);

            var Sprinkled = $(thisobj).parent().parent("tr").find("td:eq(7)").find("#hdnSprinkled").val();
            $(thisobj).parent().parent("tr").next("tr").find("td:eq(7)").find("input:checkbox").prop("checked", Sprinkled);

            var GovEnvSusp = $(thisobj).parent().parent("tr").find("td:eq(8)").find("#hdnGovEnvSusp").val();
            $(thisobj).parent().parent("tr").next("tr").find("td:eq(8)").find("input:checkbox").prop("checked", GovEnvSusp);

            var OpenSPFI = $(thisobj).parent().parent("tr").find("td:eq(9)").find("#hdnOpenSPFI").val();
            $(thisobj).parent().parent("tr").next("tr").find("td:eq(9)").find("input:text").val(OpenSPFI);

        }
        function Cancel(thisobj) {
            $(thisobj).parent().parent("tr").hide();
            $(thisobj).parent().parent("tr").prev("tr").show();
            $(thisobj).parent().parent("tr").find("input[type=text]").val("");
            $(thisobj).parent().parent("tr").find("input[type=checkbox]").prop("checked", false);

        }
        $(document).on('click', 'a.deleteBBI', function (e) {
            debugger;
            e.preventDefault();
            var Id = $(this).data("id");
            swal({
                title: "Are you sure?",
                text: "Do you want to delete this record?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: false
            },
                function () {
                    $.ajax({
                        type: "GET",
                        url: CRxUrls.BBI_Delete + "?id=" + Id,
                        success: function (data) {
                            swal("Deleted!", "Your record has been deleted.", "success");
                            location.reload();
                        },
                        dataType: "json",
                        traditional: true
                    });
                });
        });
        $('.restrictzero').on('change keyup', function (e) {
            var value = $(this).val();
            value = value.replace(/^(0*)/, "");
            $(this).val(value);
        });
        $('.percentrange').on('change keyup', function (e) {
            debugger;
            var isValid = false;
            color_tr = $(this).parent();
            var value = $(this).val();
            value = value.replace(/^(0*)/, "");
            $(this).val(value);
            if ($(this).val() != null && $(this).val() != "") {
                var regExp = /[a-z]/i;
                if (regExp.test($(this).val())) {
                    //return false;
                    isValid = true;
                }
                regExp = /[A-Z]/i;
                if (regExp.test($(this).val())) {
                    //return false;
                    isValid = true;
                }
                var ar = /^[ 0-9--]*$/;
                if (ar.test($(this).val()) == false) {
                    //alert('Your search string contains illegal characters.');
                    isValid = true;
                }
                if (!isValid) {

                    isValid = checknumberinrange($(this))
                }

                if (isValid) {
                    $(color_tr).css('background-color', 'red');
                    $(".hdnRenovatednotvalid").val("0");
                    $(this).parent().siblings().find(".savetick").addClass("disabled");
                    

                }
                else {
                    $(color_tr).css('background-color', 'white');
                    $(".hdnRenovatednotvalid").val("1");
                    if ($(".hdnSqtFtNotValid").val() == "1" && $(".hdnRenovatednotvalid").val() == "1") {
                        $(this).parent().siblings().find(".savetick").removeClass("disabled");
                        // $(this).parent().siblings().find(".bbisave").attr("title", "");
                    }
                }
            }
            else {

                $(color_tr).css('background-color', 'white');
                $(".hdnRenovatednotvalid").val("1");
                if ($(".hdnSqtFtNotValid").val() == "1" && $(".hdnRenovatednotvalid").val() == "1") {
                    $(this).parent().siblings().find(".savetick").removeClass("disabled");
                    // $(this).parent().siblings().find(".bbisave").attr("title", "");
                }

            }
        })
        $('.percent').on('change keyup', function (e) {
            debugger;
            var isValid = true;
            color_tr = $(this).parent();
            var value = $(this).val();
            value = value.replace(/^(0*)/, "");
            $(this).val(value);

            if ($(this).val() != null && $(this).val() != "") {
                isValid = checkValidValues($(this))

                if (isValid) {
                    $(color_tr).css('background-color', 'red');

                    $(".hdnSqtFtNotValid").val("0");
                    $(this).parent().siblings().find(".savetick").addClass("disabled");
                   
                }
                else {
                    $(color_tr).css('background-color', 'white');
                    $(".hdnSqtFtNotValid").val("1");
                    if ($(".hdnSqtFtNotValid").val() == "1" && $(".hdnRenovatednotvalid").val() == "1") {
                        $(this).parent().siblings().find(".savetick").removeClass("disabled");
                        //$(this).parent().siblings().find(".bbisave").attr("title", "");
                    }


                }
            }



        })

        function checkValidValues(control) {
            debugger;
            // debugger;
            var thisValue = $(control).val()
            var isValid = true;
            var minv = Number($('.minValue').val())
            var maxv = Number($('.maxValue').val())
            var recommendv = $('.recommendValue').val();
            thisValue = thisValue == "" ? "" : Number(thisValue);
            if (minv > 0 && maxv > 0) {
                isValid = (thisValue > minv && thisValue <= maxv) || thisValue === ""
            }
            else if (minv > 0) {
                isValid = (thisValue < minv) || thisValue === ""
            }
            else if (maxv > 0) {
                isValid = (thisValue > maxv) || thisValue === ""
            }

            return isValid;
        }

        function checknumberinrange(control) {
            debugger;
            // debugger;
            var thisValue = $(control).val()
            var isValid = true;
            var minv = Number($('.minValue').val())
            var maxv = Number($('.maxValue').val())
            var recommendv = $('.recommendValue').val();


            var splitval = thisValue.split('-');
            if (splitval.length > 0 && splitval.length == 2) {
                if (splitval[0].length > 0 && splitval[1].length > 0) {
                    if (!(Number(splitval[0]) < Number(splitval[1]))) {
                        isValid = true;
                    }
                    else if (minv > 0 && maxv > 0) {
                        isValid = (splitval[0] > minv && splitval[1] <= maxv) || (splitval[0] === "" && splitval[1] === "")
                    }
                    else if (minv > 0) {
                        isValid = (splitval[0] < minv) || splitval[0] === ""
                    }
                    else if (maxv > 0) {
                        isValid = (splitval[1] > maxv) || splitval[1] === ""
                    }

                }
            }
            else {
                isValid = true;
            }
            //  thisValue = thisValue == "" ? "" : Number(thisValue);

            return isValid;
        }
    </script>
    <style>
        .activeSite {
            background-color: #eee;
        }

        .bbiCancel {
            cursor: pointer;
            color: #fff;
            font-family: 'Helvetica', 'Arial', sans-serif;
            font-size: 1.2em;
            font-weight: bold;
            text-align: center;
            border-radius: 5px;
        }
        .bbi-tableBox,
        .bbi-tableBox .trborder td,
        .bbi-tableBox .trborder th {
            border: 1px solid #ccc !important;
        }

        .bbi-tableBox .trborder th,
        .bbi-tableBox th {
            padding: 4px !important;
        }

    </style>
