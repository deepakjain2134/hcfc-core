@model List<HCF.BDO.NotificationCategory>
@using HCF.Web;
@{
    ViewBag.Title = "Notification Emails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    @section pageHeader{
    <section class="content-header">
        <h1>
            Notification Emails
        </h1>
    </section>
        }
    <div class="container-fluid">
        <div class="row">
            <div class="settingnewBox">

                @await Html.PartialAsync("_MoreConfig")

                <div class="rightcol-setting">
                    <div class="box box-primary">
                        <div class="">
                            <ul style="padding:0;">
                                @foreach (var val in Model.Where(x => x.IsActive == false))
                                {
                                    <li style="list-style: none;" id="@string.Format("li_{0}",val.NotificationCatId)">
                                        <span>@val.CategoryDescription</span>
                                        @{
                                            var email = string.Empty;
                                            HCF.BDO.NotificationEmails emailData = val.NotifyEmails;
                                            if (emailData != null)
                                            {
                                                email = emailData.NotificationCCEmail;
                                            }
                                        }

                                        <input type="hidden" value="@val.NotificationCatId" name="@string.Format("hidden{0}", val.NotificationCatId)" />
                                        <input id="ccemails" type="text"
                                               name='ccemails'
                                               value="@email" class="form-control multiEmail" />
                                    </li>
                                }
                            </ul>
                            <p>Add multiple emailid with comma(,) seperated</p>
                        </div>
                        <div class="button_Div">
                            <button type="button" class="comm-button" id="updateEmails"> Update</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<script language="javascript">

    $("#updateEmails").click(function () {
        if (checkEmails()) {
            var items = "";//$('input#emails').tagsinput("items");
            var ccitems = $('input#ccemails').val();
            var notificationEmails = [];
            notificationEmails = {
                Id: 1,
                NotificationCatId: 7,
                NotificationCCEmail: ccitems.toString(),
                NotificationEmail: items.toString(),
                NotificationTypeId: 1,
                Type: 1
            };
            var postUrl = CRxUrls.notification_savenotificationemails;
            ///if (ccitems.length > 0 || ccitems.length > 0) {
            $.ajax({
                url: postUrl,
                type: "POST",
                data: JSON.stringify({ notificationEmails: notificationEmails }),
                contentType: 'application/json',
                success: function (result) {
                    swalalert("Email updated successfully.");
                }
            });
           
        }
    });

    function checkEmail(email) {
        var regExp = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return regExp.test(email);
    }

    function checkEmails() {
        var emails = $(".multiEmail").val();       
        var emailArray = emails.split(",");
        console.log(emailArray);
        var invEmails = "";
        for (i = 0; i <= (emailArray.length - 1); i++) {
            if (checkEmail(emailArray[i])) {
            } else {
                invEmails += emailArray[i] + "\n";
            }
        }
        if (invEmails != "") {
            swalalert("Invalid emails:\n" + invEmails);
            return false;
        }
        return true;

    }
</script>