@model List<HCF.BDO.Site>
@{
    ViewBag.Title = "NotificationSettings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section pageHeader{
<section class="content-header">
    <h1>
        Notification Settings
    </h1>
</section>
    }

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-3">
                <div class="box box-primary">
                    <ul class="list notification-leftMenu">
                        <li>
                            <span style="color:#000;" class="notifyType activeSite" ctrId="" mode="c">Organization Default</span>
                        </li>
                        @foreach (var item in Model.Where(x => x.IsActive && x.Buildings.Any(y => y.IsActive)).OrderBy(x => x.Name))
                        {
                            <li>
                                <span style="background-color: #fff;color:#2494be;" class="notifyType" mode="s" ctrId="@item.SiteId"> @item.Name <i class="fa fa-angle-right float-right" aria-hidden="true"></i></span>
                                <ul class="crxcheckbox assetsList">
                                    @foreach (var building in item.Buildings.Where(x => x.IsActive).OrderBy(x => x.BuildingName))
                                    {
                                        <li class="building" style="color: #333;">
                                            <span class="notifyType buildingli" mode="b" ctrId="@building.BuildingId">@building.BuildingName</span>
                                        </li>
                                    }
                                </ul>
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <div class="col-md-9 contPartpadding">
                <div class="box box-primary">
                        <div class="row tablelist-topform">
                            <div class="col-md-12">
                                <h4 id="notificationfor">Organization Default Notifications</h4>
                                <span class="notification-helptext">
                                    Your organization’s default emails will receive notifications for all items which were not assigned in an email under a specific
                                    campus or building.
                                </span>
                                <div class="float-right toccmailBox" style="display: none">
                                    <span class="tomail-bg">To Emails</span>
                                    <span class="ccmail-bg">Cc Emails</span>
                                </div>
                            </div>
                        </div>
                        <input type="hidden" name="mode" id="mode" value="c" />
                        <input type="hidden" name="searchId" id="searchId" value="" />
                        <div class="views" id="partialContents">
                            @await Component.InvokeAsync("NotificationNotifyMatrix", new { mode = "c" })                         
                        </div>
                    
                </div>
            </div>
        </div>
    </div>



@section scripts{
    <script>

    function loadMatrix(mode, ctrId) {
        $.get(CRxUrls.Notification_NotifyMatrix + '?mode=' + mode + '&id=' + ctrId, function (data) {
            $("#mode").val(mode);
            $("#searchId").val(ctrId);
            $('#partialContents').empty();
            $('#partialContents').append(data);
            $('#partialContents').fadeIn('fast');

        });
    }

    var helptext = $(".notification-helptext");
    var notificationfor = $("#notificationfor");
        $(document).on('click', '.notifyType', function () {
            //debugger;
            $(".notifyType").removeClass("activeSite");
            $(this).addClass('activeSite');

        if (!$(this).hasClass("buildingli")) {
            $(".crxcheckbox").hide();
            $(this).closest("li").find(".crxcheckbox").show();
        }
        var emailurl ='@Url.Action("GetNotifyEmails", "Notification")';
        var mode = $(this).attr("mode");
        var ctrId = $(this).attr("ctrId");
        var type = $(".activeSite").closest("span").html();;;
        if (mode === "c") {
            helptext.html("Your organization’s default emails will receive notifications for all items which were not assigned in an email under a specific campus or building.");
            notificationfor.html(type + " Notifications");
        }
        else if (mode === "s") {
            helptext.html("Emails chosen under" +type+ "will override any organization default email.");
            notificationfor.html(type + " Notifications");
        }
        else if (mode === "b") {
            helptext.html("Emails chosen under " + type +" will override any campus and organization default emails. ");
            notificationfor.html(type + " Notifications");
        }
        loadMatrix(mode,ctrId);
    });

    $('body').on('click', '.addEmail', function () {
        var emailurl ='@Url.Action("GetNotifyEmails", "Notification")';
        var notiCatId = $(this).attr("id");
        var notiEventId = $(this).attr("eventId");
        var mode= $("#mode").val();
        var searchId= $("#searchId").val();
        $.ajax({
            url: emailurl + "?notiCatId=" + notiCatId + "&eventId=" + notiEventId + "&mode=" + mode + "&id=" + searchId,
            method: "GET",
            success: function (data) {
                $('#modelContent').html($(data));
            }
        })
    });

    function RefreshNotificationPage() {
        var mode = $("#mode").val();
        var searchId = $("#searchId").val();
        loadMatrix(mode, searchId);
    }


    $(document).on('click', '.notfi-menuSubmenulist li', function () {
        $('.notfi-menuSubmenulist li').not(this).removeClass('active');
      //  $('.notfi-menuSubmenulist li.active').find(".notification-tomails").toggleClass('hide');
        $(this).toggleClass('active');
    });

    $(document).on('click', '.notification-leftMenu .crxcheckbox li', function () {
      //  $('.notification-leftMenu .crxcheckbox li').removeClass('noti-active');
      //  $(this).addClass('noti-active');

        $(this).closest(".notifyType.activeSite").find(".crxcheckbox").hide();
    });

    </script>
    
}