@model HCF.BDO.Tips

@{
    ViewBag.Title = "AddTips";
}

<section class="content-header">
    <h1>
        Add Tips
    </h1>
</section>
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="box box-primary">
                @using (Html.BeginForm("AddTips", "Tips", FormMethod.Post, new { id = "TipsAddForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <input hidden id="RouteUrlPath" value="@Model.RouteUrl" />
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)

                        <div class="form-horizontal">
                            <div class="form-group">
                                <label>Enter Title</label>
                                @Html.TextBoxFor(x => x.Title, new { @class = "form-control", placeholder = "Enter title for tip" })
                            </div>
                            <div class="form-group">
                                <label>Enter Description</label>
                                @Html.TextAreaFor(x => x.Description, new { @class = "form-control", placeholder = "Enter description for tip" })
                            </div>
                            <div class="form-group">
                                <label>Enter Source</label>
                                @Html.TextBoxFor(x => x.Source, new { @class = "form-control", placeholder = "Enter source of tip" })
                            </div>
                            <div class="form-group">
                                <label>Enter RouteUrl</label>
                                <input class="form-control" id="RouteUrlPath" name="RouteUrlPath" value="@Model.RouteUrl" />
                                @*@Html.TextBoxFor(x => x.RouteUrl, new { @class = "form-control" , value = Model.RouteUrl, placeholder = "Tip route url" })*@
                            </div>
                        </div>
                    </div>
                    <input type="submit" value='Add' class="btn btn-primary" />

                }

            </div>
        </div>
    </div>
</div>


@section scripts{
    <script src="@Url.Content("~/dist/Scripts/ckeditor/ckeditor.js")" type="text/javascript"></script>
    <script src="https://cdn.ckeditor.com/4.8.0/standard-all/ckeditor.js"></script>

    <script>
        $(document).ready(function () {

            CKEDITOR.replace('Description', {
                height: 150,
                toolbar: [
                    { name: 'document', groups: ['mode', 'document', 'doctools'], items: ['-', 'Save', 'NewPage', 'Preview', '-', 'Templates'] },
                    '/',
                    { name: 'basicstyles', groups: ['basicstyles', 'cleanup'], items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat'] },
                    { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi'], items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl', 'Language'] },
                    { name: 'links', items: ['Link', 'Unlink', 'Anchor'] },
                    { name: 'insert', items: ['HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak'] },
                    { name: 'basicstyles', items: ['Font', 'FontSize'] },
                    { name: 'colors', items: ['TextColor', 'BGColor'] },
                    { name: 'others', items: ['-'] }
                ],
                contentsCss: [CKEDITOR.basePath + 'contents.css', 'https://sdk.ckeditor.com/samples/assets/css/widgetstyles.css']
            });
            $('#RouteUrl').val($('#RouteUrlPath').val())
        })
        $('#TipsAddForm').on('submit', function () {
            if ($('#Title').val().trim() == '') { alert("Title can't be blank"); $('#Title').focus(); $('#Title').val(''); return false; }
            if ($('#Source').val().trim() == '') { alert("Source can't be blank"); $('#Source').focus(); $('#Source').val(''); return false; }
            if ($('#RouteUrl').val().trim() == '') { alert("RouteUrl can't be blank"); $('#RouteUrl').focus(); $('#RouteUrl').val(''); return false; }
        })

    </script>

}