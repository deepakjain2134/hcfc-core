@{
    ViewBag.Title = "GetModules";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section pageHeader{
    <section class="content-header">
        <h1>
            My Plan
        </h1>
    </section>
}
@*<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-primary">
                <div class="row">
                    <div class="col-md-12">
                        <div id="loadPartial"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>*@



<div class="container-fluid">
    <div class="row">
        <div class="col-md-3">
            @await Html.PartialAsync("_profilemenu")
        </div>

        <div class="col-md-9">
            <div class="box box-primary">
                <div id="loadPartial"></div>
            </div>
        </div>

    </div>
</div>

<script>

    $(document).ready(function () {
        loadPartialView();
    });

    function loadPartialView() {
        debugger;
        $.get(CRxUrls.Menu_GetModulesData, function (data) {
            $('#loadPartial').html(data);
            $('#loadPartial').fadeIn('fast');
            $(".btnServiceMode").each(function () {
                debugger;
                if ($(this).attr('orgmodulestatus') === "1" && $(this).attr('orgservicemode') === "1") {
                    $(this).addClass('disable');
                }
            });
        });
    }



    $(document).on("click", ".btnServiceMode", function () {
        //alert("Call");
        var cntrl = $(this);
        var orgStatus = parseInt(cntrl.attr('orgmodulestatus'));
        var status = orgStatus == 1 ? 0 : 1;
        var moduleId = cntrl.attr('moduleId');
        var organizationId = '@HCF.Web.Base.UserSession.CurrentOrg.ClientNo';
        var orgservicemode = parseInt(cntrl.attr('orgservicemode'));
        debugger;
        if (orgStatus === 1 && orgservicemode === 2) {
            swal({
                title: "Are you sure?",
                text: "You want to stop trial of this module",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes",
                cancelButtonText: "No",
                closeOnConfirm: true,
                closeOnCancel: true
            },
                function () {
                    save(organizationId, moduleId, orgStatus, cntrl, 3);
                });
        } else if (orgStatus === 0 && orgservicemode === 3) {
            swal({
                title: "Are you sure?",
                text: "You want to resume trial of this module",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes",
                cancelButtonText: "No",
                closeOnConfirm: true,
                closeOnCancel: true
            },
                function () {
                    save(organizationId, moduleId, orgStatus, cntrl, 5);
                });
        } else {
            save(organizationId, moduleId, status, cntrl, 2);
        }
    });


    function save(organizationId, moduleId, status, cntrl, serviceMode) {
        var values = [];
        $(".btnServiceMode").each(function () {
            if ($(this).attr('orgmodulestatus') === "1") {
                values.push($(this).attr('modulecode'));
            }
        });
        switch (cntrl.attr('modulecode')) {
            case 'CC':
                if (status === 1) {
                    saveModule(organizationId, moduleId, status, serviceMode);
                } else {
                    if (values.indexOf("ID") === -1) {
                        saveModule(organizationId, moduleId, status, serviceMode);
                    } else { swalalert("To disable this module first you need to disable Inspection module"); return false; }
                }
                break;
            case 'CP':
                if (status === 1) {
                    saveModule(organizationId, moduleId, status, serviceMode);
                } else {
                    if (values.indexOf("ID") === -1) {
                        saveModule(organizationId, moduleId, status, serviceMode);
                    } else { swalalert("To disable this module first you need to disable Inspection module"); return false; }
                }
                break;
            case 'RO':
                if (status === 1) {
                    if (values.indexOf("DR") !== -1) {
                        saveModule(organizationId, moduleId, status, serviceMode);
                    } else { swalalert("To enable this module first you need to enable drawing module"); return false; }
                } else {
                    saveModule(organizationId, moduleId, status, serviceMode);
                }
                break;
            case 'ID':
                if (status === 1) {
                    if (values.indexOf("CC") !== -1 || values.indexOf("CP") !== -1) {
                        saveModule(organizationId, moduleId, status, serviceMode);
                    } else { swalalert("To enable this module first you need to enable CRx Core OR CRx Core+ module"); return false; }
                } else {
                    saveModule(organizationId, moduleId, status, serviceMode);
                }
                break;
            case 'DR':
                if (status === 1) {
                    saveModule(organizationId, moduleId, status, serviceMode);
                } else {
                    if (values.indexOf("PR") === -1 && values.indexOf("RO") === -1) {
                        saveModule(organizationId, moduleId, status, serviceMode);
                    } else { swalalert("To disable this module first you need to disable Permit And Round module"); return false; }
                }
                break;
            case 'PR':
                if (status === 1) {
                    if (values.indexOf("DR") !== -1) {
                        saveModule(organizationId, moduleId, status, serviceMode);
                    } else { swalalert("To add/annotate drawings to permits, it requires drawings module so first you need to enable drawing module"); return false; }
                } else {
                    saveModule(organizationId, moduleId, status, serviceMode);
                }
                break;
            case 'CCC':
                if (status === 1) {
                    saveModule(organizationId, moduleId, status);
                } else {
                    if (values.indexOf("ID") === -1) {
                        saveModule(organizationId, moduleId, status);
                    } else { swalalert("To disable this module first you need to disable Inspection module"); return false; }
                }
                break;
            case 'CS':
                if (status === 1) {
                    saveModule(organizationId, moduleId, status);
                } else {
                    if (values.indexOf("ID") === -1) {
                        saveModule(organizationId, moduleId, status);
                    } else { swalalert("To disable this module first you need to disable Inspection module"); return false; }
                }
                break;
            default:
        }
    }





    function saveModule(organizationId, moduleId, status, serviceMode) {
        var isActive = status == 1 ? true : false;
        var url = '@Url.Action("UpdateMenuOrganization", "Menu")';
        $.get(url + '?organizationId=' + organizationId + '&moduleId=' + moduleId + '&IsActive=' + isActive + '&serviceMode=' + serviceMode, function (data) {
            loadPartialView();
        });
    }





</script>
<style>
    .onoffswitch-inner:before {
        content: "Active" !important;
        font-size: 12px;
        text-align: center;
        padding-left: 0px;
    }

    .onoffswitch-inner:after {
        content: "Start Trial" !important;
        font-size: 12px;
    }

    .onoffswitch {
        width: 82px;
        opacity: 1 !important;
    }

    .onoffswitch-switch {
        right: 70px;
        display: none;
    }
</style>

