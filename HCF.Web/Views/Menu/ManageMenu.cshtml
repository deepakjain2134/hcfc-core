@model HCF.BDO.Menus

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h4 class="modal-title">@ViewBag.PageTitle</h4>
</div> @using (Html.BeginForm())
{
    <div class="modal-body">

        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @*@Html.HiddenFor(model => model.ParentId)*@
            @if(ViewBag.PageTitle != "Add Menu" && ViewBag.UpdateFor== "Child Menu")
            {
            <div class="form-group">
                @Html.LabelFor(model => model.ParentId,"Menu", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ParentId, Model.MainMenu, new { @class = "dropdown form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })

                </div>
            </div>
            }
            
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="" style="padding-top: 6px;">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Alias, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (ViewBag.isAdmin == "True")
                    {
                        @Html.EditorFor(model => model.PageUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PageUrl, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.PageUrl, new { htmlAttributes = new { @class = "form-control disabled" } })
                        @Html.ValidationMessageFor(model => model.PageUrl, "", new { @class = "text-danger" })
                    }

                </div>
            </div>


           
        </div>

    </div>
    <div class="modal-footer">
        <input type="submit" value="Save" class="btn button1" />
        <button type="button" class="btn button1" data-dismiss="modal">Cancel</button>
    </div>
}




<script>
    var PageTitle = '@ViewBag.PageTitle';
    var ParentIdValue = '@ViewBag.MainMenuID';
    var UpdateFor = '@ViewBag.UpdateFor';
    if (PageTitle != "Add Menu" && UpdateFor == "Child Menu")
    {
        if (PageTitle != "Update Menu") {
            $('#ParentId').val(ParentIdValue);
        }
        
       
    }
    
    function Uploadfile(file) {
        var C_fileName = file.getAttribute("tempName");
        var fileContent = file.getAttribute("filecontent");
        if (file.files.length > 0) {
            var file = file.files[0];
            var fileName = file.name;
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () {
                var array = reader.result.split(",");
                $("input[name='" + C_fileName + "'][type=hidden]").val(fileName);
                $("input[name='" + fileContent + "'][type=hidden]").val(array[1]);
                $("input[name='FilePath'][type=hidden]").val(null);
                $('input[name="FilePath"').attr('data-dirrty-initial-value', '')
            };
            reader.onerror = function (error) {
                console.log('Error: ', error);
                $("#FileContent").val("");
            };
        }
    }

    $("#file").change(function () {
        var file = document.getElementById("file").files[0];
        var readImg = new FileReader();
        readImg.readAsDataURL(file);
        readImg.onload = function (e) {
            $('.img').attr('src', e.target.result).fadeIn();
        }
    });
</script>