@model List<HCF.BDO.RoundCategory>
@{
    ViewBag.Title = "RoundQuestionnaire";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

@section pageHeader{
<section class="content-header">
    <h1>
        Round Questionnaire
    </h1>
</section>
    }
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12 settingnewBox">
            @await Html.PartialAsync("_MoreConfig")
            <div class="rightcol-setting">

                <div class="box box-primary">
                    <div class="row vender_page tablelist-topform">
                        <div class="col-md-8 col-sm-8 form-inline">
                            <label>Category:</label>
                            <input type="hidden" id="selectedid" name="selectedid" />
                            <select id="ddlRoundCat" name="ddlRoundCat" class="form-control">
                                <option value="0">All</option>
                                @foreach (var item in Model.OrderBy(x => x.CategoryName))
                                {
                                    <option value="@item.RoundCatId">@item.CategoryName</option>
                                }
                            </select>

                            <label>Status:</label>
                            <input type="hidden" id="selectedStatus" name="selectedStatus" />
                            <select id="ddlStatus" name="ddlStatus" class="form-control">
                                <option value="-1">All</option>
                                <option value="1">Active</option>
                                <option value="0">In active</option>
                            </select>
                        </div>
                        <div class="col-md-4 col-sm-8 text-right">
                            <button class="button1" id="btn_AddNewQuestons" style="height: 34px;">Add Questionnaire To Custom Round</button>
                        </div>
                    </div>

                    <table id="newTbl" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th style="display:none"></th>
                                <th style="display:none"></th>

                                <th>Round Name</th>
                                <th>Round Questions</th>
                                <th>Short Description</th>
                                @if (HCF.Web.Base.UserSession.CurrentUser.IsSystemUser || HCF.Web.Base.UserSession.CurrentUser.IsCRxUser)
                                {
                                    <th style="width:80px;">Risk Type</th>
                                }
                                <th> Code </th>
                                <th>Round Type </th>
                                <th> Active </th>
                                <th>Action</th>
                                <th style="display:none"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var roundItems in Model)
                            {
                                foreach (var item in roundItems.RoundItems.Where(x=>x.IsOneTimeStep==false))
                                {
                                    <tr>
                                        <td style="display:none">
                                            @roundItems.RoundCatId
                                        </td>
                                        <td style="display:none">
                                            <input type="checkbox" class="checkBoxRoqueId" value="@item.RouQuesId" /><span></span>
                                        </td>
                                        <td>
                                            @roundItems.CategoryName
                                        </td>
                                        <td>
                                            @item.RoundStep
                                        </td>
                                        <td>
                                            @item.ShortDescription
                                        </td>
                                        @if (HCF.Web.Base.UserSession.CurrentUser.IsSystemUser || HCF.Web.Base.UserSession.CurrentUser.IsCRxUser)
                                        {
                                            <td>
                                                @{
                                                    HCF.BDO.Enums.RiskScore enums = (HCF.BDO.Enums.RiskScore)item.RiskType;

                                                }
                                                <p>@enums.GetDescription()</p>
                                            </td>
                                        }
                                        <td>
                                            @item.RiskStepCode
                                        </td>
                                        <td>
                                            @if (item.AdditionalRoundType == null)
                                            {
                                                <span>All </span>
                                            }
                                            else if (item.AdditionalRoundType == 1)
                                            {
                                                <span>Department </span>
                                            }
                                            else
                                            {
                                                <span>Management </span>
                                            }
                                        </td>
                                        @if (item.IsCommonRoundQues)
                                        {
                                            <td>
                                                @Html.CheckBoxFor(modelItem => item.IsActive, new { @class = "chkroundQues", @rel = item.RouQuesId, @CatId = roundItems.RoundCatId })<span></span>

                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                @Html.DisplayFor(modelItem => item.IsActive)<span></span>
                                            </td>
                                        }

                                        @if (item.IsCommonRoundQues)
                                        {
                                            <td class="build-editicon"></td>
                                        }
                                        else
                                        {
                                            <td class="build-editicon">
                                                <a title="Edit Round Question" href="@Url.Action("AddRoundsQuestonaries", "Round", new { roundCatId = item.RoundCatId, roundQuestionId = item.RouQuesId })" class="pull-right modal-link">
                                                    <img src="@Url.Content(HCF.Web.Models.ImagePathModel.EditIcon)" alt="3d_add_button" />
                                                </a>
                                            </td>
                                        }


                                        <td style="display:none">
                                            @(item.IsActive?1:0)


                                        </td>


                                    </tr>
                                }
                            }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{

<script>
    $(document).ready(function () {
      //  debugger
    var roundCatId = '@ViewBag.RoundCatId';
    var btn_AddNewQuestons = $("#btn_AddNewQuestons");
    var ddlRoundCat = $('#ddlRoundCat');

        if (roundCatId != '') {
            ddlRoundCat.val(roundCatId);
        } else {
            ddlRoundCat.val("0");
        }


    var dTable = $('#newTbl').DataTable({
        searching: true,
        pageLength: 500,
        lengthChange: false,
        bPaginate: $('#newTbl tbody tr').length > 500,
        bInfo: false,
        aaSorting: [],
        language: {
            emptyTable: "No data available in table",
            search: "_INPUT_", //To remove Search Label
            searchPlaceholder: "Search..."
        },

        aoColumnDefs: [
            {
                orderSequence: ["desc", "asc"],
                aTargets: ['_all']
            }
        ],
       /* dom: "Blftip",*/

         initComplete: function () {
             $("div.toolbar").html('<div class="add-commanBtn"><a href="@Url.Action("AddRoundsQuestonaries", "Round", new { roundCatId = ViewBag.RoundCatId ?? 0, roundQuestionId = 0 })" class= "pull-right modal-link quest-addbtn" ><img src="/dist/Images/Icons/3d_add_button.png" title="Add Round Category" alt="3d_add_button"></a></div >');
    },
    dom: "<'row'<'col-sm-2'B><'col-sm-2'l><'col-sm-8 tableactions'flp <'toolbar'>>>" + "<'row'<'col-md-12'<'table-responsive'tr> > >" + "<'row'<'col-sm-12 text-right'p>>",




       buttons: [
            {
                extend: 'pdfHtml5',
                orientation: 'portrait',
                title: 'Round Questionnaire Report',
                exportOptions: {
                    columns: [2,3]
                },
                messageBottom: function () {
                    return $("#dvgeneratedby").text();
                },
                customize: function (doc) {
                    doc.content.splice(0, 1);
                    var now = new Date();
                    var jsDate = setDateFormat(now);
                    var logo = localStorage.getItem("logoimgbase64");//getBase64FromImageUrl();
                    doc.pageMargins = [20, 60, 20, 30];
                    doc.defaultStyle.fontSize = 8;
                    doc.styles.tableHeader.fontSize = 7;
                    doc['header'] = (function () {
                        return {
                            columns: [
                                { image: logo, width: 40 },
                                {
                                    alignment: 'left',
                                    italics: true,
                                    text: getOrgName('@HCF.Web.Base.UserSession.CurrentOrg.Name'), @*text: '@HCF.Web.Base.UserSession.CurrentOrg.Name',*@
                                    fontSize: 14,
                                    margin: [0, 6, 0, 0],
                                    width: 200,
                                },
                                {
                                    alignment: 'middle',
                                    fontSize: 14,
                                    text: 'Round Questionnaire Report',
                                    margin: [0, 6, 0, 0]
                                }
                            ],
                            margin: 20
                        }
                    });
                    doc['footer'] = (function (page, pages) {
                        return {
                            columns: [
                                {
                                    alignment: 'left',
                                    text: ['Generated from CRx on ', { text: jsDate.toString() }]
                                },
                                {
                                    alignment: 'center',
                                    text: ['Page ', { text: page.toString() }, ' of ', { text: pages.toString() }]
                                },
                                {
                                    alignment: 'right',
                                    text: ['Generated by: ', { text: '@HCF.Web.Base.UserSession.CurrentUser.Name'} ]
                                }
                            ],
                            margin: 20
                        }
                    });
                    var objLayout = {};
                    objLayout['hLineWidth'] = function (i) { return .5; };
                    objLayout['vLineWidth'] = function (i) { return .5; };
                    objLayout['hLineColor'] = function (i) { return '#aaa'; };
                    objLayout['vLineColor'] = function (i) { return '#aaa'; };
                    objLayout['paddingLeft'] = function (i) { return 4; };
                    objLayout['paddingRight'] = function (i) { return 4; };
                    doc.content[0].layout = objLayout;
                }
            },
            {
                extend: 'excel',
                title: 'Round Questionnaire Report',
                messageBottom: function () {
                    return $("#dvgeneratedby").text();
                },
                exportOptions: {
                    columns: [2,3],
                    orthogonal: 'export'
                }
            }
        ]
    });

    HideTableSorting();
    $('.dt-button.buttons-pdf.buttons-html5').attr('title', 'Download PDF');
    $('.dt-button.buttons-excel.buttons-html5').attr('title', 'Download Excel');

    $('#newTbl thead').click(function () {
        //debugger;
        HideTableSorting();
    });

    function HideTableSorting() {
       // debugger;
        $('#newTbl th[aria-label*="Status').removeClass('sorting');
        $('#newTbl th[aria-label*="Action"]').removeClass('sorting');
        var selectedid = $('#selectedid').val();
        if (selectedid != "") {
            //$("#ddlRoundCat")[0].selectedIndex = selectedid;
            $("#ddlRoundCat").val(selectedid);
            dTable.column(0).search("^" + selectedid + "$", true, true, false).draw();
            $('#selectedid').val("");
        } else {
            dTable.columns(0).search("").draw();
        }
    }

    if (roundCatId > 0) {
        dTable.column(0).search("^" + roundCatId + "$", true, true, false).draw();
    }


    btn_AddNewQuestons.click(function () {
       // debugger;
        var roundCatId = 0; //$("#ddlRoundCat").val();

        if (!isNaN(roundCatId)) {
            var url = '@Url.Action("AddQuesttoCustomRound", "Round")';
            window.location.href = url + "?roundCatId=" + roundCatId;
        }
        @*if (roundCatId > 0) {
                var url = '@Url.Action("AddQuesttoCustomRound", "Round")';
                window.location.href = url + "?roundCatId=" + roundCatId;
            } else {
                swalalert("Please select at least one category!");
            }*@
    });

    $('#ddlRoundCat').on('change', function () {
      //  debugger;
        var roundCatId = $(this).val();
        if (roundCatId > "0") {
            dTable.column(0).search("^" + roundCatId + "$", true, true, false).draw();
            $('#selectedid').val(roundCatId);

        }
        else
        {
            dTable.columns(0).search("").draw();
        }

    });
        $('#ddlStatus').on('change', function () {
           // debugger;
            var status = $(this).val();
            if (status > "-1") {
                dTable.column(-1).search("^" + status + "$", true, true, false).draw();

                $('#selectedStatus').val(status);

            }
            else {
                dTable.columns(-1).search("").draw();
            }

        });
        $('#ddlStatus').val(1).trigger('change');
    });



     $('.chkroundQues').on('change', function () {
       // debugger;
        var id = $(this).attr("rel")
        var val = $(this).prop('checked');
        var catid = $(this).attr("CatId");
        $.get("@Url.Action("RoundCmnQuesActiveStatus", "Round")" + "?id=" + id + "&status=" + val + "&CatId=" + catid, function () { });
     });

    var selprojectId = $("#SelProjectId");
    selprojectId.change(function () {
        var projectId = selprojectId.val();
        filterRecords(projectId);
    })

    function filterRecords(projectId) {
        if (projectId > 0) {
            //alert("Call " + projectId);
            dataTables.column(-1).search("^" + projectId + "$", true, true, false).draw();
        } else {
            dataTables.columns(-1).search("").columns(-2).search("").draw();
        }
    }
</script>


}