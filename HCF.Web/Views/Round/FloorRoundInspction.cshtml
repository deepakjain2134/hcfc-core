@model HCF.BDO.TRounds
@{
    ViewBag.Title = "Readiness Round Inspection";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


    @section pageHeader{
    <section class="content-header">
        <h1>
            Floor Round Inspection Summary
        </h1>
    </section>
        }
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-3 col-left">
                <div class="box box-primary asset_list_view">
                    <div class="adduserlistBox">
                        <div class="roundpanel">
                            <h4 class="roundsHeading"> @Model.RoundName.CastToNA("NA")</h4>
                            <h4 class="roundsHeading"> @Model.RoundDate.ToFormatDate()</h4>
                        </div>
                        @Html.HiddenFor(x => x.TRoundId)
                        <div id="insp_round_locations">
                            @await Html.PartialAsync("_RoundLocations", Model.Locations)
                        </div>
                        <div id="insp_round_users">
                            @await Html.PartialAsync("_RoundInspectors", Model.TRoundUsers)
                        </div>
                        <div id="insp_round_issues">
                            @await Html.PartialAsync("_RoundIssues", Model.RoundWorkOrders)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9 col-xs-9">
                <div class="box box-primary" id="floor_round_questions">
                    @*@Html.Action("FloorRoundQuestonaries", "Round", new { floorId = ViewBag.FloorTRoundId, rId = Model.TRoundId })*@
                    @await Component.InvokeAsync("RoundFloorRoundQuestonaries", new { floorId = ViewBag.FloorTRoundId, rId = Model.TRoundId,seq=1 })
                </div>
            </div>
        </div>
    </div>


<script>
    $(document).ready(function () {
          @foreach (var item in Model.Inspections.Where(x=>x.UserId==HCF.Web.Base.UserSession.CurrentUser.UserId).ToList())
          {
             @:BindFloorsStatus('@item.FloorId', '@item.InspStatus');
          }
    });

    function BindFloorsStatus(floorId, status) {
       // debugger;
        if (parseInt(status) === 1) {
            $('li.floor[floorid=' + floorId + ']').addClass('pass');
        } else if (parseInt(status) === 0) {
            $('li.floor[floorid=' + floorId + ']').addClass('fail');
        }else {
            $('li.floor[floorid=' + floorId + ']').addClass('inprogress');
        }
    }

    $("#addwo").hide();

     $("#insp_round_locations .floor").click(function () {
        var floorId = $(this).attr("floorid");
        openRoundQuestons(floorId);
    });

    var openRoundQuestons = function (floorId) {
       // debugger;
        //1
        var troundId = $("#TRoundId").val();
        $.get(CRxUrls.Round_FloorRoundQuestonaries + '?floorId=' + floorId + "&rId=" + troundId, function (data) {
            $('#floor_round_questions').html(data);
            $('#floor_round_questions').fadeIn('fast');
        });
    }
</script>
<style>
    .pass {
        background-color: #54a77b;
        color: #fff !important;
    }

    .fail {
        background-color: #cc6164;
        color: #fff !important;
    }

    .inprogress {
        background-color: blue;
        color: #fff !important;
    }
</style>