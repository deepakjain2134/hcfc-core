@model HCF.BDO.RoundsQuestionnaires

@using (Html.BeginForm("SaveTempRoundsQuestionnaires", "Round", FormMethod.Post, new { id = "addroundquestonariesform" }))
{
    <div class="modal-header">
        <h4 class="modal-title">
            @((Model.RouQuesId > 0) ? "Update " : "Add ") Round Questionnaire
            <button type="button" class="close" data-dismiss="modal">&times;</button>
        </h4>
    </div>
    <div class="modal-body" style="overflow: auto;">
        <div class="col-md-5">
            <div class="row">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <input type="hidden" name="IsCommonRoundQues" id="IsCommonRoundQues" />
                @Html.HiddenFor(x=>x.IsOneTimeStep)
               
                <div class="col-md-12 form-group">
                    <label>Round Questionnaire</label>
                    @Html.HiddenFor(model => model.RouQuesId)<em class="required-field">* </em>
                    @Html.TextBoxFor(model => model.RoundStep, null, new { @class = "form-control", required = "required", oninput = "validate(this)" })

                </div>
                <div class="col-md-12 form-group">
                    <label>Risk Step Code <em class="required-field"> </em></label>
                    @Html.TextBoxFor(model => model.RiskStepCode, new { @class = "form-control", @maxlength = "6" })
                </div>
               

                <div class="col-md-12 text-right button_Div">
                    <button type="submit" class="comm-button" title="Save" id="btn_submit">
                        Save
                    </button>
                    <button type="button" class="comm-Cancelbutton" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>        
    </div>
}