@model List<HCF.BDO.Questionnaire>
@{
    ViewBag.Title = "Index";
}


    @section pageHeader{
    <section class="content-header">
        <h1>
            Daily Log Questionnaire
        </h1>
    </section>
        }
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="settingnewBox">
                @await Html.PartialAsync("_MoreConfig")

                <div class="rightcol-setting">
                    <div class="box box-primary">
                        @*<div class="add_button_comman">
            <a href='@Url.RouteUrl("addquestionnaire")' class="pull-right">
                <img src="@Url.Content(HCF.Web.Models.ImagePathModel.AddIcon)" title="Add Questionnaire" alt="3d_add_button" />
            </a>
        </div>*@
                        <div class="row">
                            <div class="col-md-12">
                                <p><label>(To rearrange questionnaire drag up & down sequence)</label></p>
                                <table id="questionTable" class="table table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th>Sequence</th>
                                            <th style="min-width: 31px;"></th>
                                            <th style="display:none"></th>
                                            <th>
                                                Questionnaire
                                            </th>
                                            <th>
                                                Active
                                            </th>
                                            <th></th>
                                            <th>Add Steps</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.OrderBy(x => x.Sequence))
                                        {
                                            <tr>
                                                <td>@item.Sequence<span class="ui-icon ui-icon-arrowthick-2-n-s" style="float:right"></span></td>
                                                <td class="details-control" rel='@item.QuestionnaireId'></td>
                                                <td style="display:none">@item.QuestionnaireId</td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Goal)
                                                </td>
                                                <td class="comman_checkbox1">
                                                    @Html.DisplayFor(modelItem => item.IsActive)<span></span>
                                                </td>
                                                <td>
                                                    <img onclick="location.href ='@Url.Action("AddQuestionnaire", "Questionnaire", new { questionnaireId = item.QuestionnaireId })'" src="@Url.Content(HCF.Web.Models.ImagePathModel.EditIcon)" title="Edit" />
                                                </td>
                                                <td>
                                                    <a href="@Url.Action("AddQuestionnaireSteps", "Questionnaire", new { questionnaireId = item.QuestionnaireId })" class="modal-link">
                                                        <img src="@Url.Content(HCF.Web.Models.ImagePathModel.AddIcon)" alt="">
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" src="https://cdn.datatables.net/rowreorder/1.2.5/js/dataTables.rowReorder.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/rowreorder/1.2.5/css/rowReorder.dataTables.min.css" />
<script>

    var questionTable = $("#questionTable").DataTable({
        rowReorder: true,
        columnDefs: [
            { orderable: true, className: 'reorder', targets: 0 },
            { orderable: true, className: 'reorder', targets: 3},
            { orderable: false, targets: '_all' }
        ],
        /*dom : "Blftip",*/

        initComplete: function () {
            $("div.toolbar").html('<div class="add-commanBtn"><a href="@(Url.Action("addquestionnaire"))" class= "pull-right" ><img src="/dist/Images/Icons/3d_add_button.png" title="Add Questionnaire" alt="3d_add_button"></a></div >');
        },
        dom: "<'row'<'col-sm-2'B><'col-sm-2'l><'col-sm-8 tableactions'flp <'toolbar'>>>" + "<'row'<'col-md-12'<'table-responsive'tr> > >" + "<'row'<'col-sm-12 text-right'p>>",


         buttons: [
                {
                    extend: 'pdfHtml5',
                    orientation: 'portrait',
                    title: 'Question Report',
                    exportOptions: {
                        columns: [0,3]
                    },
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    customize: function (doc) {
                        doc.content.splice(0, 1);
                        var now = new Date();
                        var jsDate = setDateFormat(now);
                        var logo = localStorage.getItem("logoimgbase64");//getBase64FromImageUrl();
                        doc.pageMargins = [20, 60, 20, 30];
                        doc.defaultStyle.fontSize = 8;
                        doc.styles.tableHeader.fontSize = 7;
                        doc['header'] = (function () {
                            return {
                                columns: [
                                    { image: logo, width: 40 },
                                    {
                                        alignment: 'left',
                                        italics: true,
                                        text: getOrgName('@HCF.Web.Base.UserSession.CurrentOrg.Name'), @*text: '@HCF.Web.Base.UserSession.CurrentOrg.Name',*@
                                        fontSize: 14,
                                        margin: [0, 6, 0, 0],
                                        width: 200,
                                    },
                                    {
                                        alignment: 'middle',
                                        fontSize: 14,
                                        text: 'Question Report',
                                        margin: [0, 6, 0, 0]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        doc['footer'] = (function (page, pages) {
                            return {
                                columns: [
                                    {
                                        alignment: 'left',
                                        text: ['Generated from CRx on ', { text: jsDate.toString() }]
                                    },
                                    {
                                        alignment: 'center',
                                        text: ['Page ', { text: page.toString() }, ' of ', { text: pages.toString() }]
                                    },
                                    {
                                        alignment: 'right',
                                        text: ['Generated by: ', { text: '@HCF.Web.Base.UserSession.CurrentUser.Name'} ]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        var objLayout = {};
                        objLayout['hLineWidth'] = function (i) { return .5; };
                        objLayout['vLineWidth'] = function (i) { return .5; };
                        objLayout['hLineColor'] = function (i) { return '#aaa'; };
                        objLayout['vLineColor'] = function (i) { return '#aaa'; };
                        objLayout['paddingLeft'] = function (i) { return 4; };
                        objLayout['paddingRight'] = function (i) { return 4; };
                        doc.content[0].layout = objLayout;
                    }
                },
                {
                    extend: 'excel',
                    title: 'Question Report',
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    exportOptions: {
                        columns: [0, 3],
                        orthogonal: 'export'
                    }
                }
            ]
    });

    $('.dt-button.buttons-pdf.buttons-html5').attr('title', 'Download PDF');
    $('.dt-button.buttons-excel.buttons-html5').attr('title', 'Download Excel');

    questionTable.on('row-reorder', function (e, details, edit) {
        setTimeout(function () {
            //console.log(questionTable.columns(2).data().eq(0));
            var seqIds = questionTable.columns(2).data()[0].join(",");
            UpdateQuestionnairesSeq(seqIds);
        }, 10);
    });


    function UpdateQuestionnairesSeq(seqIds) {
        var url = CRxUrls.questionnaire_UpdateQuestionnaireSequence;
        $.ajax({
            url: url + "?seqIds=" + seqIds,
            method: "GET",
            contentType: 'application/json',
            success: function (data) {
            },
            error: function (error) {
                console.log(error);
            }
        });
    }


    $('#questionTable tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
        var row = questionTable.row(tr);

            if (row.child.isShown()) {
                $('div.slider', row.child()).slideUp(function () {
                    row.child.hide();
                    tr.removeClass('shown');
                });
            }
            else {
                console.log($(this).attr("rel"));
                var questionnaireId = $(this).attr("rel");
                var url = '@Url.Action("QuestionnaireSteps", "Questionnaire")';
                $.get(url + "?questionnaireId=" + questionnaireId, function (data) {
                    row.child(data, 'no-padding').show();
                    tr.addClass('shown');
                });
                $('div.slider', row.child()).slideDown();
            }
    });
</script>
<style>
    .dataTables_length {
        display: none;
    }
</style>