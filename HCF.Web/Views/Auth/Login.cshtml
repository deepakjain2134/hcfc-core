@using Microsoft.AspNetCore.Mvc.Localization
@using HCF.Web.Localize
@model HCF.Web.Models.LoginModel
@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"
@addTagHelper "*, HCF.Web"
@inject HCF.Utility.AppConfig.IAppSetting appSettings
@inject IHtmlLocalizer<Resource> Localizer
@{
    ViewBag.Title = "CRx Login";
    Layout = null;
    var recentUsers = (List<HCF.Web.Models.RecentLoginModel>)ViewBag.RecentUsers;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    @*<meta http-equiv="refresh" content="150">*@
    <title>@ViewBag.Title</title>
    <meta name="theme-color" content="#2196f3" />
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="~/bundles/css/login/login.css" rel="stylesheet" asp-append-version="true" />
    <script src="~/bundles/js/main/custom.js" type="text/javascript" asp-append-version="true"></script>
    <script src='@Url.Content("~/dist/Scripts/jquery.unobtrusive-ajax.js")' type="text/javascript"></script>

    <script src='@Url.Content("~/dist/js/SwalAlerts.js")' type="text/javascript"></script>
    <link src='@Url.Content("~/dist/css/sweetalert.css")' type="text/css" />


</head>
<body class="hold-transition login-page">
    <div class="login-wrapper">
        <div class="login-container">
            <div class="login-row">
                <div class="login-col1">
                    <partial name="_loginSlider" />
                </div>
                <div class="login-col2">
                    <div class="formwithlogo">
                        <div class="alertLoginAuth">
                            <div class="logoCrx-login">
                                <img src="/dist/Images/Icons/login_logo_icon.png" alt="">
                            </div>
                            <div class="loginAlertBox">
                                <partial name="_ValidationSummary" />
                            </div>
                        </div>
                        <div class="crxnewloginbox">
                            <div class="crxnewloginbox-bottom">

                                <div id="login-form" class="@(Model.LoginMode =="recentbox" ?"hide":"")">
                                    <partial name="_Login" model="Model" />
                                </div>
                                <div id="login-using-vendor-orgId" class="hide">
                                    @await Html.PartialAsync("_VendorCreate", Model)
                                </div>
                                <div id="recent-user-box" class="@(Model.LoginMode =="upbox" ?"hide":"")">
                                    @await Html.PartialAsync("_RecentUsers", Model)
                                </div>
                                <div class="forgot-show hide" id="forgot-password">
                                    @await Html.PartialAsync("_ForgotPassword", new HCF.Web.ViewModels.Account.ForgotPasswordViewModel())
                                </div>
                            </div>
                        </div>
                    </div>
                    <ip-address></ip-address>
                </div>
            </div>
        </div>
    </div>
    <script src="~/bundles/js/login/login.js" asp-append-version="true"></script>
    <script>
                        var vis = (function(){
                var stateKey, eventKey, keys = {
                    hidden: "visibilitychange",
                    webkitHidden: "webkitvisibilitychange",
                    mozHidden: "mozvisibilitychange",
                    msHidden: "msvisibilitychange"
                };
                for (stateKey in keys) {
                    if (stateKey in document) {
                        eventKey = keys[stateKey];
                        break;
                    }
                }
                return function(c) {
                    if (c) document.addEventListener(eventKey, c);
                    return !document[stateKey];
                }
                })();

                var visible = vis(); // gives current state

       // vis(aFunction);      // registers a handler for visibility changes`

        vis(function(){
           if(vis())
           { location.reload();
           }
        });


    </script>

</body>
</html>