@model IEnumerable<HCF.BDO.AssetType>

@{
    ViewBag.Title = Localizer["AssetType"];
}

    @section pageHeader{
    <section class="content-header">
            <h1>
                @Localizer["AssetType"]
               
            </h1>
    </section>
        }
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="col-md-4">
                       
                            @*@Html.AssetTypeDownList("AssetType", 0, " All Asset Types ", new { @class = "form-control", required = "required" })*@
                        
                    </div>
                    <div class="add_button_comman">
                        <a href='@(Url.Action("editAssetsType", "Assets"))' class="pull-right">
                            <img src="@Url.Content(HCF.Web.Models.ImagePathModel.AddIcon)" title="Add Site" alt="3d_add_button" />
                        </a>
                    </div>
                    <div class="row">
                        <table id="assetTypeTable" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Name)
                                    </th>
                                    <th>
                                        Asset Type Code
                                    </th>

                                    <th>
                                        Status
                                    </th>
                                    <th>Action</th>
                                </tr>

                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderBy(x => x.Name))
                                {
                                    <tr>
                                        <td>
                                            <a href='@(Url.RouteUrl("assets", new { id = item.TypeId }))'>
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </a>
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.AssetTypeCode)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.IsActive)<span></span>
                                        </td>
                                        <td>
                                            @Html.ActionLink("Edit", "editAssetsType", new { AssetTypeId = item.TypeId })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

<script>

    var dataTables = $('#assetTypeTable').DataTable({
            "lengthChange": false,
            "aaSorting": [],
            "pageLength": 20,
            "bPaginate": $('#assetTypeTable tbody tr').length > 20,
            "bInfo": false,
            "searching": false,
            "language": {
                "emptyTable": "No data available in table"
            },
            dom: "Blfrtip",
            buttons: [
                {
                    extend: 'pdfHtml5',
                    orientation: 'portrait',
                    title: 'Asset Type Report',
                    exportOptions: {
                        columns: [0, 1]
                    },
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    customize: function (doc) {
                        doc.content.splice(0, 1);
                        var now = new Date();
                        var jsDate = setDateFormat(now);
                        var logo = localStorage.getItem("logoimgbase64");//getBase64FromImageUrl();
                        doc.pageMargins = [20, 60, 20, 30];
                        doc.defaultStyle.fontSize = 8;
                        doc.styles.tableHeader.fontSize = 7;
                        doc['header'] = (function () {
                            return {
                                columns: [
                                    { image: logo, width: 40 },
                                    {
                                        alignment: 'left',
                                        italics: true,
                                        text: getOrgName('@HCF.Web.Base.UserSession.CurrentOrg.Name'), @*text: '@HCF.Web.Base.UserSession.CurrentOrg.Name',*@
                                        fontSize: 14,
                                        margin: [0, 6, 0, 0],
                                        width: 200,
                                    },
                                    {
                                        alignment: 'middle',
                                        fontSize: 14,
                                        text: 'Asset Type Report',
                                        margin: [0, 6, 0, 0]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        doc['footer'] = (function (page, pages) {
                            return {
                                columns: [
                                    {
                                        alignment: 'left',
                                        text: ['Created on: ', { text: jsDate.toString() }]
                                    },
                                    {
                                        alignment: 'right',
                                        text: ['Generated from: ', { text:  'CRx' }]
                                    },
                                    {
                                        alignment: 'right',
                                        text: ['Generated by: ', { text: '@HCF.Web.Base.UserSession.CurrentUser.Name'} ]
                                    },
                                    {
                                        alignment: 'right',
                                        text: [{ text: page.toString()},' of ',{ text: pages.toString()}]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        var objLayout = {};
                        objLayout['hLineWidth'] = function (i) { return .5; };
                        objLayout['vLineWidth'] = function (i) { return .5; };
                        objLayout['hLineColor'] = function (i) { return '#aaa'; };
                        objLayout['vLineColor'] = function (i) { return '#aaa'; };
                        objLayout['paddingLeft'] = function (i) { return 4; };
                        objLayout['paddingRight'] = function (i) { return 4; };
                        doc.content[0].layout = objLayout;
                    }
                },
                {
                    extend: 'excel',
                    title: 'Asset Type Report',
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    exportOptions: {
                        columns: [0, 1],
                        orthogonal: 'export'
                    }
                }
            ]
    });
</script>