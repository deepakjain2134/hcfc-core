@model IEnumerable<HCF.BDO.TFloorAssets>

<table id="floorAssets" class="table table-bordered table-striped">
    <thead>
        <tr>
            @*<th style="display:none"></th>*@
            <th>
                Asset Type
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AssetNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            @*<th style="display:none">
                    IsOnFLoor
                </th>*@
            <th>
                Location
            </th>
            <th> @Localizer["NearBy"] </th>
            <th>
                Active
            </th>
            <th>
                Edit
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Where(x => !x.IsDeleted).OrderByDescending(x => x.CreatedDate))
        {
            <tr>
                @*<td style="display:none" class="@(item.InspectionGroup != null && item.InspectionGroup.InspectionGroupId > 0 ? "comman_checkbox1 disable" : "comman_checkbox1")">
                        <input type="checkbox" id="tfloorAssetId" class="@(item.InspectionGroup != null && item.InspectionGroup.InspectionGroupId > 0 ? "checkBox disable" : "checkBox")" value="@item.FloorAssetsId" data-assetid="@item.AssetId" /><span></span>
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Assets.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AssetNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                @*<td style="display:none">
                        @{var isOnFloorPlan = (item.OnFloorPlan) ? "Yes" : "No";}
                        <span>@isOnFloorPlan</span>
                    </td>*@
                <td>
                    @if (item.Floor != null)
                    {
                        <span>
                            @commonModelFactory.GetFloorAssetLocation(item)
                        </span>
                    }
                </td>
                <td>
                    @item.NearBy.CastToNA()
                </td>
                <td>
                    @item.StatusCode
                </td>
                <td title="Edit">
                    <img onclick="location.href ='@Url.Action("CreateFloorassets", "Assets", new { floorAssetId = item.FloorAssetsId })'"
                         src="@Url.Content(HCF.Web.Models.ImagePathModel.EditIcon)" title="Edit" alt="Edit" />
                </td>
            </tr>
        }

    </tbody>
</table>
<script>
    $(document).ready(function () {
        $.fn.dataTable.ext.errMode = 'none';
        $('#floorAssets').on('error.dt', function (e, settings, techNote, message) { console.log('An error occurred: ', message); });
        var oTable = $('#floorAssets').DataTable({
            lengthChange: false,
            pageLength: 20,
            bPaginate: $('#floorAssets tbody tr').length > 20,
            bInfo: true,
            aaSorting: [],
            language: {
                emptyTable: "No data available in table"
            },
            buttons: [
                {
                    extend: 'pdfHtml5',
                    orientation: 'portrait',
                    title: 'Floor Assets Report',
                    exportOptions: {
                        columns: [0,1,2,3,4,5]
                    },
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    customize: function (doc) {
                        doc.content.splice(0, 1);
                        var now = new Date();
                        var jsDate = setDateFormat(now);
                        var logo = localStorage.getItem("logoimgbase64");//getBase64FromImageUrl();
                        doc.pageMargins = [20, 60, 20, 30];
                        doc.defaultStyle.fontSize = 8;
                        doc.styles.tableHeader.fontSize = 7;
                        doc['header'] = (function () {
                            return {
                                columns: [
                                    { image: logo, width: 40 },
                                    {
                                        alignment: 'left',
                                        italics: true,
                                        text: getOrgName('@HCF.Web.Base.UserSession.CurrentOrg.Name'), @*text: '@HCF.Web.Base.UserSession.CurrentOrg.Name',*@
                                        fontSize: 14,
                                        margin: [0, 6, 0, 0],
                                        width: 200,
                                    },
                                    {
                                        alignment: 'middle',
                                        fontSize: 14,
                                        text: 'Floor Assets Report',
                                        margin: [0, 6, 0, 0]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        doc['footer'] = (function (page, pages) {
                            return {
                                columns: [
                                    {
                                        alignment: 'left',
                                        text: ['Generated from CRx on ', { text: jsDate.toString() }]
                                    },
                                    {
                                        alignment: 'center',
                                        text: ['Page ', { text: page.toString() }, ' of ', { text: pages.toString() }]
                                    },
                                    {
                                        alignment: 'right',
                                        text: ['Generated by: ', { text: '@HCF.Web.Base.UserSession.CurrentUser.Name'} ]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        var objLayout = {};
                        objLayout['hLineWidth'] = function (i) { return .5; };
                        objLayout['vLineWidth'] = function (i) { return .5; };
                        objLayout['hLineColor'] = function (i) { return '#aaa'; };
                        objLayout['vLineColor'] = function (i) { return '#aaa'; };
                        objLayout['paddingLeft'] = function (i) { return 4; };
                        objLayout['paddingRight'] = function (i) { return 4; };
                        doc.content[0].layout = objLayout;
                    }
                },
                {
                    extend: 'excel',
                    title: 'Floor Assets Report',
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5],
                        orthogonal: 'export'
                    }
                }
            ],
           
             initComplete: function () {
                 $("div.toolbar").html('<div class="add-commanBtn"><a href="@(Url.Action("new", "asset"))" class= "pull-right" ><img src="/dist/Images/Icons/3d_add_button.png" title="Add Assets" alt="3d_add_button"></a></div >');
                },
            dom: "<'row'<'col-sm-2'B><'col-sm-2'l><'col-sm-8 tableactions'flp <'toolbar'>>>" + "<'row'<'col-md-12'<'table-responsive'tr> > >" + "<'row'<'col-sm-12 text-right'p>>",



        });

        $('.dt-button.buttons-pdf.buttons-html5').attr('title', 'Download PDF');
        $('.dt-button.buttons-excel.buttons-html5').attr('title', 'Download Excel');

        $('#drpStatus').on('change', function () {
            debugger;
            var val = $(this).val();
            console.log(val);//.search("^" + $(this).val() + "$", true, false, true)
            if (val) {
                oTable.columns(5).search(val).draw();
            } else {
                oTable.columns(5).search("").draw();
            }
            //datatable.columns(0).search(val).draw();
        });


        var allPages = oTable.cells().nodes();

      


    });
</script>
