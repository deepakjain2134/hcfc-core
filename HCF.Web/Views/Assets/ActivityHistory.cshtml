@model HCF.BDO.Inspection

@{
    ViewBag.Title = "Activity History";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    @section pageHeader{
        <section class="content-header">
            <h1 class="align-left">
                Activity History (Read Only) 
            </h1>
        </section>
    }
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">

                    <div class="row tablelist-topform">
                        <div class="col-md-12">
                            @if (Model.EPDetails != null && Model.EPDetails.Scores != null)
                            {
                                <div class="ephisCol-1">
                                    <div class="epDetails">
                                        <p title="@Localizer["StandardEP"]">
                                            <label>@Model.EPDetails.StandardEp</label><br />
                                            <label>@($"{Model.EPDetails.Scores.Name}")</label>
                                        </p>
                                    </div>
                                </div>
                                <div class="ephisCol-2">
                                    @*@await Html.PartialAsync("_EpDescription", Model.EPDetails.Description,
                new ViewDataDictionary(
                new Microsoft.AspNetCore.Mvc.ModelBinding.EmptyModelMetadataProvider(),
                new Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary())
                {{ "standardEp", @Model.EPDetails.StandardEp }}
                )*@
                                    @await Component.InvokeAsync("EpDescription", new { epDetailId = Model.EPDetails.EPDetailId, maxLength = 0, epdetails = Model.EPDetails })
                                </div>
                            }
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            @if (Model.TInspectionActivity != null && Model.TInspectionActivity.Count > 0 && Model.TInspectionActivity[0].InspectionEPDocs != null
                               && Model.TInspectionActivity[0].InspectionEPDocs.UploadDocTypeId.HasValue && Model.TInspectionActivity[0].InspectionEPDocs.UploadDocTypeId == Convert.ToInt32(HCF.BDO.Enums.UploadDocTypes.AssetsReport))
                            {
                                <label>Generated By:</label>
                                @commonModelFactory.setUserName(Model.TInspectionActivity[0].UserProfile)
                                <div class="inspector-col1"><strong>@Localizer["InspectionDateTime"] : </strong>@Model.TInspectionActivity[0].ActivityInspectionDate.Value.ToClientTime().ToFormatDateTime()</div>

                            }
                            else
                            {
                                <label>@Localizer["InspectorName"]:</label>

                            }

                        </div>

                        <div class="col-md-12">
                            @{
                                if (Model.TInspectionActivity.Count > 0)
                                {
                                    @await Component.InvokeAsync("AssetsActivity", new { activity = Model.TInspectionActivity[0], status = TempData["Status"] })
                                    //Html.RenderAction("Activity", "Assets", new { activity = Model.TInspectionActivity[0], status = TempData["Status"] });
                                }
                            }
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>


@section scripts
{
    
}