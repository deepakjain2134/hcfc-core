@model HCF.BDO.Binders

@{
    ViewBag.Title = "add Binder";
    var eps = (IEnumerable<HCF.BDO.StandardEps>)ViewBag.Standards;

}
@section pageHeader{
    <section class="content-header">
        <h1>
            @($"{(Model.BinderId > 0 ? "Update" : "Add")} Binder")
        </h1>
    </section>
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 col-xs-12">
            <div class="box box-primary fc-view binder_page">
                <div class="slider-binders">
                    @using (Html.BeginForm("AddBinders", "Repository", FormMethod.Post, new { enctype = "multipart/form-data", id = "BinderAddForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <input type="hidden" name="epids" id="epids" />
                        <div class="row list-Contacts">
                            <div id="hdn_div">
                                @Html.HiddenFor(x => x.BinderId)
                                @Html.HiddenFor(x => x.BinderCode)
                                <input type="hidden" name="FileName" value="@Model.FileName" />
                                <input type="hidden" name="FileContent" />
                                <input type="hidden" name="FilePath" value="@Model.FilePath" />
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <label>Binder Name</label><em class="required-field"> *</em>
                                    @Html.HiddenFor(model => model.ParentBinderId)
                                    @Html.TextBoxFor(model => model.BinderName, new { @class = "form-control", required = "required", @maxlength = "30" })
                                    @Html.ValidationMessageFor(model => model.BinderName)
                                </div>
                                <div class="form-group">
                                    <label>Description</label>
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @maxlength = "250" })
                                    @Html.ValidationMessageFor(model => model.Description)
                                </div>
                                <div class="form-group comman_checkbox">

                                    @Html.EditorFor(model => model.IsActive, new { @class = "form-control" })<span></span>
                                    @Html.ValidationMessageFor(model => model.IsActive)
                                    <label>Status</label>
                                </div>
                            </div>
                            <div class="col-lg-8">
                                <form id="demoform">
                                    <p style="color: blue;">
                                        Click an EP under “Available EPs” to add it to your binder. Click an EP under “Selected EPs” to remove it from your binder.
                                    </p>
                                    <select class="form-control cursor" multiple="multiple" size="16" name="duallistbox_demo1[]" title="duallistbox_demo1[]">
                                        @if (ViewBag.SelectedEps == null)
                                        {
                                            @foreach (var item in eps.Where(x => x.BinderId == null || x.BinderId == Model.BinderId).ToList())
                                            {
                                                <option value="@item.EPDetailId">
                                                    @item.StandardEP @((!string.IsNullOrEmpty(item.BinderName)) ? "(" + item.BinderName + ")" : "")
                                                </option>
                                            }
                                        }
                                        else
                                        {
                                            @foreach (var item in eps.Where(x => x.BinderId == null || x.BinderId == Model.BinderId).ToList())
                                            {
                                                <option value="@item.EPDetailId" selected="@commonModelFactory.IsSelected(item, (List<HCF.BDO.StandardEps>)ViewBag.SelectedEps)">
                                                    @item.StandardEP @((!string.IsNullOrEmpty(item.BinderName)) ? "(" + item.BinderName + ")" : "")
                                                </option>
                                            }
                                        }
                                    </select>
                                </form>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-12 text-right button_Div">

                                <input type="button" value="Save" class="comm-button" id="btnsubmit" />
                                @*@Html.ActionLink("Cancel ", "Binders", "Repository", new { @class = "comm-button" })*@
                                @Html.ActionLink("Cancel", "Binders", new { controller = "Repository" }, new { @class = "comm-Cancelbutton" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- /.row -->
</div>


@section scripts{


    <script src="@Url.Content("~/dist/js/jquery.bootstrap-duallistbox.js")" type="text/javascript"></script>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/dist/css/bootstrap-duallistbox.css")">
    <script type="text/javascript">
        var demo1 = $('select[name="duallistbox_demo1[]"]').bootstrapDualListbox({
            nonSelectedListLabel: 'Available EPs',
            selectedListLabel: 'Selected EPs',
            preserveSelectionOnMove: 'moved',
            // moveAllLabel: 'Move all',
            // removeAllLabel: 'Remove all'
        });

        $('#btnsubmit').click(function () {
            var isvalid = true;
            var epids = $('[name="duallistbox_demo1[]"]').val();
            $("#epids").val(epids);
            debugger;
            if ($.trim($("#BinderName").val()) == '') {
                isValid = false;
            }
            if (isvalid) {
                $('#BinderAddForm').submit();
            }
        });



    </script>

    <style>
        .moveall,
        .removeall {
            border: 1px solid #ccc !important;
            &:hover

        {
            background: #efefef;
        }

        }


        .moveall::after {
            content: attr(title);
        }

        .removeall::after {
            content: attr(title);
        }


        .form-control option {
            padding: 10px;
            border-bottom: 1px solid #efefef;
        }

        .bootstrap-duallistbox-container option {
            cursor: pointer;
        }
    </style>
}

