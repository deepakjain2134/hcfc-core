@model List<HCF.BDO.TAssetDeviceChangeForms>
@{
    ViewBag.Title = "AssetDeviceChangeForms";
    Layout = "~/Views/Shared/_Layout.cshtml";

}


@section pageHeader{
    <section class="content-header">
        <h1>
            Asset Device Change 

        </h1>
    </section>
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="" id="questtblediv">
                    <div class="row tablelist-topform">
                        <div class="col-md-4">
                            <icraprojectdropdown name="SelProjectId" selectedvalue="0"
                                                 class="form-control" firsttext="-- All Project --"></icraprojectdropdown>
                          
                        </div>
                        <div class="col-md-8">
                            <a class="formIcons" formType="1"><img src="@Url.Content("~/dist/Images/Icons/life_safety_device_addition.png")" title="Addition Form" alt="" /> Addition Form</a>
                            <a class="formIcons" formType="0"><img src="@Url.Content("~/dist/Images/Icons/life_safety_device_removal.png")" title=" Removal Form " alt="" /> Removal Form</a>
                            <a class="formIcons" formType="2"><img src="@Url.Content("~/dist/Images/Icons/relocation_icon.png")" title=" Relocation Form " alt="" /> Relocation Form</a>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="add_button_comman">
                                <div class="dropup" style="display: inline-block;">
                                 
                                    <input type="submit" name="button" class="button1 dropdown-toggle btn_users lsdform_button" id="btn_users" title="New Form"
                                           value="" data-toggle="dropdown" />
                                    <ul class="dropdown-menu" id="btn_user_ddl">
                                        <li>

                                            <a href="@(Url.RouteUrl("newassetdeviceform",new { sformType="addition"}))" class="">
                                                Addition Form
                                            </a>
                                            <a href="@(Url.RouteUrl("newassetdeviceform",new { sformType="removal"}))" class="">
                                                Removal Form
                                            </a>
                                            <a href="@(Url.RouteUrl("newassetdeviceform",new { sformType="relocation"}))" class="">
                                              Relocation Form 
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <table id="asserttable" class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th style="display:none"></th>
                                        <td></td>
                                        <th>Permit #</th>
                                        <th>Project Name</th>
                                        <th>Contractor</th>
                                        <th>Date [of Request]</th>
                                        <th>Requestor</th>
                                        <th>Status</th>
                                        <th>Action</th>
                                        <th style="display:none"></th>
                                        <th style="display:none"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Where(x => x.IsActive).OrderByDescending(x => x.DateOfRequest).ThenByDescending(x => x.CreatedDate))
                                    {
                                        var img = string.Empty;
                                        if (item.FormType == 1)
                                        {
                                            img = "life_safety_device_addition.png";
                                        }
                                        else if (item.FormType == 0)
                                        {
                                            img = "life_safety_device_removal.png";
                                        }
                                        else
                                        {
                                            img = "relocation_icon.png";
                                        }
                                    <tr id="trRow_@item.AdcFormNo">
                                        <td style="display:none">@item.FormType</td>
                                        <td>
                                            @if (item.FormType == 1)
                                            {
                                                <img src="@Url.Content("~/dist/Images/Icons/" + img)" class="deficiencyIcons"
                                                     title="Addition Form" alt="" />
                                            }
                                            else if (item.FormType == 0)
                                            {
                                                <img src="@Url.Content("~/dist/Images/Icons/" + img)" class="deficiencyIcons"
                                                     title="Removal Form" alt="" />
                                            }
                                            else
                                            {
                                        <img src="@Url.Content("~/dist/Images/Icons/" + img)" class="deficiencyIcons"
                                             title="Relocation Form" alt="" />
                                            }

                                        </td>

                                        <td>@item.PermitNo</td>
                                        <td>
                                            @item.ProjectName
                                        </td>
                                        <td>@item.Contractor</td>

                                        <td data-sort="@item.DateOfRequest.Ticks">
                                            @item.DateOfRequest.ToFormatDate()
                                        </td>
                                        <td>@(item.RequestorUser != null && !string.IsNullOrEmpty(item.RequestorUser.Name) ? item.RequestorUser.Name : string.Empty)</td>


                                        @*<td>
            @item.PhoneNumber
        </td>
        <td>
            @item.EmailAddress
        </td>*@
                                        <td>
                                            <input type="hidden" value="@item.Status" />
                                            @{
                                                HCF.BDO.Enums.ApprovalStatus enums = (HCF.BDO.Enums.ApprovalStatus)item.Status;
                                            }
                                            <p>@enums.GetDescription()</p>

                                        </td>
                                       @{ var formtype = string.Empty;
                                          
                                           if (item.FormType == 1)
                                           {
                                               formtype = "addition";
                                           }
                                           else if (item.FormType == 0)
                                           {
                                               formtype = "removal";
                                           }
                                           else
                                           {
                                               formtype = "relocation";
                                              
                                           }
                                       }
                                                <td class="mopmoredot" style="display:flex;justify-content: space-around;">
                                                    <a href="@Url.RouteUrl("newassetdeviceform",new { formId=item.AdcFormId ,formType=formtype})">
                                                        <span><img src="@Url.Content(HCF.Web.Models.ImagePathModel.EditIcon)" title="Edit Permit" alt="3d_add_button" /></span>
                                                    </a>
                                                    <a data-id="@item.AdcFormNo" class="@(HCF.Web.Base.UserSession.IsInRole("setup_Constructions_superadmin") ? "deletepermit" :"deletepermit hide")">
                                                        <span><img src="@Url.Content(HCF.Web.Models.ImagePathModel.DeleteIcon)" title="Delete Permit" alt="3d_add_button" /></span>
                                                    </a>


                                                    <div class="dropdown icratable-drop icondpwnload">
                                                        <button class="dropdown-toggle" type="button" data-toggle="dropdown">
                                                            <i class="fa fa-ellipsis-v" aria-hidden="true"></i>
                                                            <span>
                                                                <img src="~/dist/Images/Icons/pdf_icon.png" title="Download Pdf" alt="" />
                                                            </span>
                                                        </button>
                                                        <ul class="dropdown-menu ctmenu">

                                                            <li data-action="icrapermit">
                                                                <a href="@Url.Action("AssetDeviceChangeFormPdf", "Pdf", new { formId = item.AdcFormId,IsAttachmentIncluded=false})">
                                                                    <span>
                                                                        Export permit as PDF
                                                                    </span>
                                                                </a>

                                                            </li>

                                                            <li data-action="icrapermit">
                                                                <a href="@Url.Action("DownloadACDAttachments", "Permit", new { formId = item.AdcFormId})">
                                                                    <span>
                                                                        Export permit as PDF w/ attachments
                                                                    </span>
                                                                </a>

                                                            </li>


                                                        </ul>

                                                    </div>
                                                </td>
                                                <td style="display:none">@item.Status</td>
                                                <td style="display:none">@item.ProjectId</td>
                                    </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var selprojectId = $("#SelProjectId");
    var asserttable = $('#asserttable').DataTable({
        "lengthChange": false,
        "pageLength": 20,
        "bPaginate": $('#asserttable tbody tr').length > 20,
        "bInfo": false,
        "aaSorting": [],
        "order": [[6, "desc"]],
        language: {
            emptyTable: "No data available in table",
            search: "_INPUT_", //To remove Search Label
            searchPlaceholder: "Search..."
        },
       /* dom: "<'row'<'col-sm-2'><'col-sm-2'><'col-sm-8 tableactions'flp <'toolbar'>>>" + "<'row'<'col-md-12'<'table-responsive tableHeight'tr> >>" + "<'row'<'col-sm-12 text-right'p>>",*/

        dom: "<'row'<'col-sm-2'B><'col-sm-2'l><'col-sm-8 tableactions'flp <'toolbar'>>>" + "<'row'<'col-md-12'<'table-responsive tableHeight'tr> > >" + "<'row'<'col-sm-12 text-right'p>>",
               buttons: [
            {
                                                extend: 'pdfHtml5',
                orientation: 'portrait',
                //pageSize:'LEGAL',
                title: 'Asset Device Change Report',
                exportOptions: {
                    columns: [ 2, 3, 4, 5, 6, 7],
                },
                messageBottom: function () {
                                                    return $("#dvgeneratedby").text();
                                                },
                customize: function (doc) {
                                                    //genereateRpeort(doc)
                                                    //Remove the title created by datatTables
                                                    doc.content.splice(0, 1);
                                                    //Create a date string that we use in the footer. Format is dd-mm-yyyy
                                                    var now = new Date();
                                                    var jsDate = setDateFormat(now);
                                                    //var jsDate = now.getDate() + '-' + (now.getMonth() + 1) + '-' + now.getFullYear();
                                                    // Logo converted to base64
                                                    //var logo = $("#logoimgbase64").val();
                                                    debugger;
                                                    var logo = localStorage.getItem("logoimgbase64");//getBase64FromImageUrl();
                                                                                                     //console.log(logo);
                                                                                                     // The above call should work, but not when called from codepen.io
                                                                                                     // So we use a online converter and paste the string in.
                                                                                                     // Done on http://codebeautify.org/image-to-base64-converter
                                                                                                     // It's a LONG string scroll down to see the rest of the code !!!
                                                                                                     //var logo = '';
                                                                                                     // A documentation reference can be found at
                                                                                                     // https://github.com/bpampuch/pdfmake#getting-started
                                                                                                     // Set page margins [left,top,right,bottom] or [horizontal,vertical]
                                                                                                     // or one number for equal spread
                                                                                                     // It's important to create enough space at the top for a header !!!
                                                    doc.pageMargins = [20, 60, 20, 30];
                                                    // Set the font size fot the entire document
                                                    doc.defaultStyle.fontSize = 8;
                                                    // Set the fontsize for the table header
                                                    doc.styles.tableHeader.fontSize = 7;
                                                    // Create a header object with 3 columns
                                                    // Left side: Logo
                                                    // Middle: brandname
                                                    // Right side: A document title
                                                    doc['header'] = (function () {
                                                        return {
                                                            columns: [
                                                                { image: logo, width: 40 },
                                {
                                                                alignment: 'left',
                                    italics: true,
                                    text:('@HCF.Web.Base.UserSession.CurrentOrg'!=null ?getOrgName('@HCF.Web.Base.UserSession.CurrentOrg.Name'):""), @*text: '@HCF.Web.Base.UserSession.CurrentOrg.Name',*@
                                    fontSize: 14,
                                    margin: [0, 6, 0, 0],
                                    width: 200,
                                },
                                {
                                    alignment: 'middle',
                                    fontSize: 14,
                                    text: 'Asset Device Change Report',
                                    margin: [0, 6, 0, 0]
                                }
                            ],
                            margin: 20
                        }
                    });
                    // Create a footer object with 2 columns
                    // Left side: report creation date
                    // Right side: current page and total pages
                    doc['footer'] = (function (page, pages) {
                        return {
                            columns: [
                                {
                                    alignment: 'left',
                                    text: ['Created on: ', { text: jsDate.toString() }]
                                },
                                {
                                    alignment: 'right',
                                    text: ['Generated from: ', { text: 'CRx' }]
                                },
                                {
                                    alignment: 'right',
                                    text: ['Generated by: ', { text: ('@HCF.Web.Base.UserSession.CurrentOrg'!=null ?getOrgName('@HCF.Web.Base.UserSession.CurrentOrg.Name'):"") }]
                                },
                                {
                                    alignment: 'right',
                                    text: [{ text: page.toString() }, ' of ', { text: pages.toString() }]
                                }
                            ],
                            margin: 20
                        }
                    });
                    // Change dataTable layout (Table styling)
                    // To use predefined layouts uncomment the line below and comment the custom lines below
                    // doc.content[0].layout = 'lightHorizontalLines'; // noBorders , headerLineOnly
                    var objLayout = {};
                    objLayout['hLineWidth'] = function (i) { return .5; };
                    objLayout['vLineWidth'] = function (i) { return .5; };
                    objLayout['hLineColor'] = function (i) { return '#aaa'; };
                    objLayout['vLineColor'] = function (i) { return '#aaa'; };
                    objLayout['paddingLeft'] = function (i) { return 4; };
                    objLayout['paddingRight'] = function (i) { return 4; };
                    doc.content[0].layout = objLayout;
                }
            },
            {
                extend: 'excel',
                title: 'Asset Device Change Report',
                messageBottom: function () {
                    return $("#dvgeneratedby").text();
                },
                exportOptions: {
                    columns: [  2, 3, 4, 5,6,7],
                    orthogonal: 'export'
                }
            }
        ]
    });

    $(document).ready(function () {

        var projectId = parseInt(getParameterByName('ProjectId'));
        var status = getParameterByName('Status');
        if (projectId != undefined && projectId > 0) {
            selprojectId.val(projectId);
            filterRecords(projectId);
        }
        if (status != undefined) {
            filterRecordsbyStatus(status);
        }

        $('.formIcons').click(function () {
            $(this).toggleClass("active");
            var formType = $(this).attr("formType");
            $('.formIcons').removeClass('active');
            var array = [];
            $('.formIcons').each(function () {
                if ($(this).attr("formType") == formType) {
                    array.push($(this).attr("formType"));
                    $(this).addClass("active")

                }


            });
            console.log(array.join('|'));
            if (array.length == 0) {
                array.push(2);
            }
            asserttable.column(0).search(array.join('|'), true, false, true).draw();

        });
    });


    selprojectId.change(function () {
        var projectId = selprojectId.val();
        filterRecords(projectId);
    })

    function filterRecords(projectId) {
        if (projectId > 0) {
            //alert("Call " + projectId);
            asserttable.column(-1).search("^" + projectId + "$", true, true, false).draw();
        } else {
            asserttable.columns(-1).search("").columns(-2).search("").draw();
        }
    }

    function filterRecordsbyStatus(status) {
        if (status != undefined) {
            asserttable.column(-2).search("^" + status + "$", true, true, false).draw();
        }
    }

    $(document).on('click', 'a.deletepermit', function (e) {
        debugger;
        e.preventDefault();
        var Id = $(this).data("id");
        swal({
            title: "Are you sure?",
            text: "Do you want to delete this permit?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false
        },
            function () {
                $.ajax({
                    type: "GET",
                    url: CRxUrls.Permit_Delete + "?id=" + Id + "&permittype=5",
                    success: function (data) {
                        $("#trRow_" + Id).remove();
                        swal("Deleted!", "Your permit has been deleted.", "success");
                        location.reload();
                    },
                    dataType: "json",
                    traditional: true
                });
            });
    });
</script>
<style>
    .add_button_comman {
        position: absolute;
        right: 22px;
        top: -1px;
        z-index: 9;
    }

    .tableactions {
        padding-right: 56px;
    }

    .lsdform_button {
        background: url(/dist/Images/Icons/3d_add_button.png) 5px 3px no-repeat #fff;
        padding: 10px 10px 10px 22px;
        border-radius: 20px;
    }
</style>