@model List<HCF.BDO.TFacilitiesMaintenanceOccurrencePermit>
@{
    /**/


    ViewBag.Title = "Facilities Maintenance Occurrence";

    Layout = "~/Views/Shared/_Layout.cshtml";
}


    @section pageHeader{
    <section class="content-header">
        <h1>
            Facilities Maintenance Occurrence
        </h1>
    </section>
        }
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="row tablelist-topform">
                        <div class="col-md-12">
                            <div class="dropup dash_btnfilter">
                                <input type="submit" name="button" class="button1 dropdown-toggle btn_users assets_with_day" id="btn_formType"
                                       value="Completely Resolved" data-toggle="dropdown" />
                                    <ul class="dropdown-menu occdrop-menu" id="btn_user_ddl">
                                        <li class="btn_formType">
                                            Yes 
                                        </li>
                                        <li class="btn_formType">
                                            No
                                        </li>
                                    </ul>
                                <input type="submit" name="button" class="button1 dropdown-toggle btn_users due_with_day" id="btn_incomplete"
                                       value="Incomplete Reports" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12" id="questtblediv">
                            <table id="questtbl" class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th style="display:none">

                                        </th>
                                        <th>Report#</th>
                                        <th>Name</th>
                                        <th>Asset ID</th>
                                        <th>Report Date</th>
                                        <th>Shift</th>
                                        <th>Organization</th>
                                        <th>Completely Resolved</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Where(x => x.IsDeleted == false).OrderByDescending(x => x.ReportDate))
                                    {
                                        <tr>
                                            <td style="display:none">
                                                @item.CompletelyResolved
                                            </td>
                                            <td>@item.PermitNo</td>
                                            <td>@item.Name</td>
                                            <td>@item.AssetId</td>
                                            <td data-sort="@item.ReportDate.DateSort()">
                                                @item.ReportDate.ToFormatDate()
                                            </td>
                                            <td>
                                                @item.Shift
                                            </td>
                                            <td>
                                                @item.Company
                                            </td>
                                            <td>
                                                @if (item.CompletelyResolved == 1)
                                                {
                                                    <p>Yes</p>
                                                }
                                                else if (item.CompletelyResolved == 0)
                                                {
                                                    <p>No</p>
                                                }
                                            </td>
                                            <td>
                                                <div class="facili-actions">
                                                    <a href="@Url.RouteUrl("addfacilitiesmaintenanceoccurrence",new { id=item.TfmcId})">
                                                        <span><img src="@Url.Content(HCF.Web.Models.ImagePathModel.EditIcon)" title="Edit Permit" alt="3d_add_button" /></span>
                                                    </a>
                                                    <div class="@(HCF.Web.Base.UserSession.IsInRole("setup_Constructions_superadmin") ? "" :"hide")" title="@(item.CompletelyResolved==1 ? "This report can not be deleted as if the report is completely resolved and it becomes part of the historical record." :"")">
                                                        <a data-id="@item.TfmcId" class="@(item.CompletelyResolved==1 ? "deletepermit disable" :"deletepermit")">
                                                            <span><img src="@Url.Content(HCF.Web.Models.ImagePathModel.DeleteIcon)" title="Delete Report" alt="3d_add_button" /></span>
                                                        </a>
                                                    </div>
                                                    <a href="@Url.Action("FMCPermitPdf", "PDF",new {id=item.TfmcId})">
                                                        <span>
                                                            <img src="~/dist/Images/Icons/pdf_icon.png" title="Download Pdf" alt="" />
                                                        </span>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>

    $(document).ready(function () {

        var dataTables = $('#questtbl').DataTable({
            "lengthChange": false,
            "aaSorting": [],
            "pageLength": 20,
            "bPaginate": $('#questtbl tbody tr').length > 20,
            "bInfo": false,
            "oSearch": { "bSmart": false },
            "order": [[4, "desc"]],
            "language": {
                "emptyTable": "No data available in table",
                "search": "_INPUT_",
                "searchPlaceholder": "Search.."
            },
         initComplete: function () {
             $("div.toolbar").html('<div class="add-commanBtn"><a href="@(Url.Action("0", "facilities_maintenance_occurrence"))" class= "pull-right" ><img src="/dist/Images/Icons/3d_add_button.png" title="Add Facilities" alt="3d_add_button"></a></div >');
        },
            dom: "<'row'<'col-sm-2'B><'col-sm-2'l><'col-sm-8 tableactions'flp <'toolbar'>>>" + "<'row'<'col-md-12'<'table-responsive'tr> > >" + "<'row'<'col-sm-12 text-right'p>>",
        buttons: [
                {
                    extend: 'pdfHtml5',
                    orientation: 'portrait',
                    //pageSize:'LEGAL',
                    title: 'Facilities Maintenance Occurrence Report',
                    exportOptions: {
                        columns: [1, 2, 3, 4, 5,6,7]
                    },
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    customize: function (doc) {
                        //genereateRpeort(doc)
                        //Remove the title created by datatTables
                        doc.content.splice(0, 1);
                        //Create a date string that we use in the footer. Format is dd-mm-yyyy
                        var now = new Date();
                        var jsDate = setDateFormat(now);
                        //var jsDate = now.getDate() + '-' + (now.getMonth() + 1) + '-' + now.getFullYear();
                        // Logo converted to base64
                        //var logo = $("#logoimgbase64").val();
                        debugger;
                        var logo = localStorage.getItem("logoimgbase64");//getBase64FromImageUrl();
                        //console.log(logo);
                        // The above call should work, but not when called from codepen.io
                        // So we use a online converter and paste the string in.
                        // Done on http://codebeautify.org/image-to-base64-converter
                        // It's a LONG string scroll down to see the rest of the code !!!
                        //var logo = '';
                        // A documentation reference can be found at
                        // https://github.com/bpampuch/pdfmake#getting-started
                        // Set page margins [left,top,right,bottom] or [horizontal,vertical]
                        // or one number for equal spread
                        // It's important to create enough space at the top for a header !!!
                        doc.pageMargins = [20, 60, 20, 30];
                        // Set the font size fot the entire document
                        doc.defaultStyle.fontSize = 11;
                        // Set the fontsize for the table header
                        doc.styles.tableHeader.fontSize = 11;
                        // Create a header object with 3 columns
                        // Left side: Logo
                        // Middle: brandname
                        // Right side: A document title
                        doc['header'] = (function () {
                            return {
                                columns: [
                                    { image: logo, width: 40 },
                                    {
                                        alignment: 'left',
                                        italics: true,
                                        text: ('@HCF.Web.Base.UserSession.CurrentOrg'!=null ?getOrgName('@HCF.Web.Base.UserSession.CurrentOrg.Name'):""),
                                        fontSize: 15,
                                        margin: [0, 6, 0, 0],
                                        width: 200,
                                    },
                                    {
                                        alignment: 'middle',
                                        fontSize: 15,
                                        text: 'Facilities Maintenance Occurrence Report',
                                        margin: [0, 6, 0, 0]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        // Create a footer object with 2 columns
                        // Left side: report creation date
                        // Right side: current page and total pages
                        doc['footer'] = (function (page, pages) {
                            return {
                                columns: [
                                    {
                                        alignment: 'left',
                                        text: ['Created on: ', { text: jsDate.toString() }]
                                    },
                                    {
                                        alignment: 'right',
                                        text: ['Generated from: ', { text: 'CRx' }]
                                    },
                                    {
                                        alignment: 'right',
                                        text: ['Generated by: ', { text: ('@HCF.Web.Base.UserSession.CurrentUser'!=null ?'@HCF.Web.Base.UserSession.CurrentUser.Name':"") }]
                                    },
                                    {
                                        alignment: 'right',
                                        text: [{ text: page.toString() }, ' of ', { text: pages.toString() }]
                                    }
                                ],
                                margin: 20
                            }
                        });
                        // Change dataTable layout (Table styling)
                        // To use predefined layouts uncomment the line below and comment the custom lines below
                        // doc.content[0].layout = 'lightHorizontalLines'; // noBorders , headerLineOnly
                        var objLayout = {};
                        objLayout['hLineWidth'] = function (i) { return .5; };
                        objLayout['vLineWidth'] = function (i) { return .5; };
                        objLayout['hLineColor'] = function (i) { return '#aaa'; };
                        objLayout['vLineColor'] = function (i) { return '#aaa'; };
                        objLayout['paddingLeft'] = function (i) { return 4; };
                        objLayout['paddingRight'] = function (i) { return 4; };
                        doc.content[0].layout = objLayout;
                    }
                },
                {
                    extend: 'excel',
                    title: 'Facilities Maintenance Occurrence Report',
                    messageBottom: function () {
                        return $("#dvgeneratedby").text();
                    },
                    exportOptions: {
                        columns: [ 1, 2, 3, 4, 5,6,7],
                        orthogonal: 'export'
                    }
                }
            ]
        });


        $("#btn_incomplete").click(function () {
            $(this).toggleClass('active');
            if ($(this).hasClass('active')) {
                dataTables.columns(0).search("0").draw();
            } else {
                dataTables.columns(0).search("").draw();
            }
        });
        $(".btn_formType").click(function () {
            debugger;
            console.log($(this).html().trim());
            $(this).toggleClass('active');
            if ($(this).hasClass('active')) {
                dataTables.columns(7).search($(this).html().trim()).draw();
            } else {
                dataTables.columns(7).search("").draw();
            }

        });
    });
    $(document).on('click', 'a.deletepermit', function (e) {
        debugger;
        e.preventDefault();
        var Id = $(this).data("id");
        swal({
            title: "Are you sure?",
            text: "Do you want to delete this permit?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false
        },
            function () {
                $.ajax({
                    type: "GET",
                    url: CRxUrls.Permit_Delete + "?id=" + Id +"&permittype=2",
                    success: function (data) {
                        swal("Deleted!", "Your permit has been deleted.", "success");
                        location.reload();
                    },
                    dataType: "json",
                    traditional: true
                });
            });
    });

    </script>
<style>

    .formIcons img {
        width: 25px;
    }

    .formIcons.active {
        border-bottom: 2px solid green;
    }
    
    .btn_formType {
        cursor: pointer;
    }
    .dash_btnfilter {
        width: 100%;
    }

        .dash_btnfilter .button1 {
            min-height: 34px;
        }
</style>