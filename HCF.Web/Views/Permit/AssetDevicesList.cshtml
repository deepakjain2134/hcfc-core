@model IEnumerable<HCF.BDO.AssetDevices>
@{
    ViewBag.Title = "Asset Devices";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section pageHeader{
    <section class="content-header">
        <h1>
            Asset Devices
        </h1>
    </section>
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="settingnewBox">

                @await Html.PartialAsync("_MoreConfig")

                <div class="rightcol-setting">
                    <div class="box box-primary">
                        <div class="row">
                            @*<div class="col-md-12">
                                <div class="add_button_comman">
                                    <a href='@(Url.RouteUrl("addAssetDevice"))' class="pull-right modal-link">
                                        <img src="@Url.Content(HCF.Web.Models.ImagePathModel.AddIcon)" title="Add Asset Device" alt="3d_add_button" />
                                    </a>
                                </div>
                            </div>*@
                            <div class="col-md-12">
                                <table id="assettypetbl" class="table table-bordered table-striped vendor_view">
                                    <thead>
                                        <tr>
                                            <th style="display:none;"></th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Name)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.DeviceType)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Path)
                                            </th>
                                            <th style="width:30px;">@* @Resources.Resource.Status *@ Active </th>
                                            <th style="width:230px;">
                                                Action
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                        <tr>
                                            <td style="display:none;" class="details-control" rel='@item.AssetFormId'></td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td>
                                                @if (item.DeviceType == 1)
                                                {

                                                    <span>Life Safety Device</span>
                                                }
                                                else if (item.DeviceType == 2)
                                                {
                                            <span>Facility Device</span>
                                                }
                                                else
                                                {
                                                    <span>Other Device</span>
                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Path)
                                            </td>
                                            <td class="text-center">
                                                @Html.DisplayFor(modelItem => item.IsActive)<span></span>
                                            </td>
                                            <td class="table-Mbtn">

                                                @Html.ActionLink("Modify ", "AddAssetDevices", "Permit", new { assetformid = item.AssetFormId }, new { @class = "modal-link table-button" })
                                            </td>
                                        </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    var dataTables = $('#assettypetbl').DataTable({
        "lengthChange": false,
        "aaSorting": [],
        "pageLength": 20,
        "bPaginate": $('#assettypetbl tbody tr').length > 20,
        "bInfo": false,
        //"order": [[3, "desc"]],
        "oSearch": { "bSmart": false },
        "language": {
            "emptyTable": "No data available in table",
            "search": "_INPUT_",
            "searchPlaceholder": "Search.."
        },
         initComplete: function () {
             $("div.toolbar").html('<div class="add-commanBtn"><a href="@(Url.RouteUrl("addAssetDevice"))" class="pull-right modal-link"> <img src="@Url.Content(HCF.Web.Models.ImagePathModel.AddIcon)" title="Add Asset Device" alt="3d_add_button" />  </a></div >');
        },
        dom: "<'row'<'col-sm-2'B><'col-sm-2'l><'col-sm-8 tableactions'flp <'toolbar'>>>" + "<'row'<'col-md-12'<'table-responsive'tr> > >" + "<'row'<'col-sm-12 text-right'p>>",
        buttons: [
            {
                extend: 'pdfHtml5',
                orientation: 'portrait',
                //pageSize:'LEGAL',
                title: 'Asset Devices Report',
                exportOptions: {
                    columns: [ 1, 2, 3],
                },
                messageBottom: function () {
                    return $("#dvgeneratedby").text();
                },
                customize: function (doc) {
                    //genereateRpeort(doc)
                    //Remove the title created by datatTables
                    doc.content.splice(0, 1);
                    //Create a date string that we use in the footer. Format is dd-mm-yyyy
                    var now = new Date();
                    var jsDate = setDateFormat(now);
                    //var jsDate = now.getDate() + '-' + (now.getMonth() + 1) + '-' + now.getFullYear();
                    // Logo converted to base64
                    //var logo = $("#logoimgbase64").val();
                    debugger;
                    var logo = localStorage.getItem("logoimgbase64");//getBase64FromImageUrl();
                    //console.log(logo);
                    // The above call should work, but not when called from codepen.io
                    // So we use a online converter and paste the string in.
                    // Done on http://codebeautify.org/image-to-base64-converter
                    // It's a LONG string scroll down to see the rest of the code !!!
                    //var logo = '';
                    // A documentation reference can be found at
                    // https://github.com/bpampuch/pdfmake#getting-started
                    // Set page margins [left,top,right,bottom] or [horizontal,vertical]
                    // or one number for equal spread
                    // It's important to create enough space at the top for a header !!!
                    doc.pageMargins = [20, 60, 20, 30];
                    // Set the font size fot the entire document
                    doc.defaultStyle.fontSize = 8;
                    // Set the fontsize for the table header
                    doc.styles.tableHeader.fontSize = 7;
                    // Create a header object with 3 columns
                    // Left side: Logo
                    // Middle: brandname
                    // Right side: A document title
                    doc['header'] = (function () {
                        return {
                            columns: [
                                { image: logo, width: 40 },
                                {
                                    alignment: 'left',
                                    italics: true,
                                    text:('@HCF.Web.Base.UserSession.CurrentOrg'!=null ?getOrgName('@HCF.Web.Base.UserSession.CurrentOrg.Name'):""), @*text: '@HCF.Web.Base.UserSession.CurrentOrg.Name',*@
                                    fontSize: 14,
                                    margin: [0, 6, 0, 0],
                                    width: 200,
                                },
                                {
                                    alignment: 'middle',
                                    fontSize: 14,
                                    text: 'Asset Device Report',
                                    margin: [0, 6, 0, 0]
                                }
                            ],
                            margin: 20
                        }
                    });
                    // Create a footer object with 2 columns
                    // Left side: report creation date
                    // Right side: current page and total pages
                    doc['footer'] = (function (page, pages) {
                        return {
                            columns: [
                                {
                                    alignment: 'left',
                                    text: ['Created on: ', { text: jsDate.toString() }]
                                },
                                {
                                    alignment: 'right',
                                    text: ['Generated from: ', { text: 'CRx' }]
                                },
                                {
                                    alignment: 'right',
                                    text: ['Generated by: ', { text: ('@HCF.Web.Base.UserSession.CurrentUser' != null ? '@HCF.Web.Base.UserSession.CurrentUser.Name' : "") }]
                                },
                                {
                                    alignment: 'right',
                                    text: [{ text: page.toString() }, ' of ', { text: pages.toString() }]
                                }
                            ],
                            margin: 20
                        }
                    });
                    // Change dataTable layout (Table styling)
                    // To use predefined layouts uncomment the line below and comment the custom lines below
                    // doc.content[0].layout = 'lightHorizontalLines'; // noBorders , headerLineOnly
                    var objLayout = {};
                    objLayout['hLineWidth'] = function (i) { return .5; };
                    objLayout['vLineWidth'] = function (i) { return .5; };
                    objLayout['hLineColor'] = function (i) { return '#aaa'; };
                    objLayout['vLineColor'] = function (i) { return '#aaa'; };
                    objLayout['paddingLeft'] = function (i) { return 4; };
                    objLayout['paddingRight'] = function (i) { return 4; };
                    doc.content[0].layout = objLayout;
                }
            },
            {
                extend: 'excel',
                title: 'Asset Devices Report',
                messageBottom: function () {
                    return $("#dvgeneratedby").text();
                },
                exportOptions: {
                    columns: [ 1, 2, 3],
                    orthogonal: 'export'
                }
            }
        ]
    });



</script>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
