@model HCF.BDO.TICRAReports

@{
    //ViewBag.Title = "TICRAObservationReport";
    if (ViewBag.PermitType != null && ViewBag.PermitType == 1)
    {
        ViewBag.Title = "PCRAObservationReport";
    }
    else
    {
        ViewBag.Title = "TICRAObservationReport";
    }

    Layout = "~/Views/Shared/_Layout.cshtml";

}


@section pageHeader{
    <section class="content-header">
        <h1>
            Observation Report
        </h1>
    </section>
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">

                @*@Html.ICRAListDropDownList("icraDDL", Model.TicraId, "Select ICRA Project Name", new { @class = "form-control" })*@
                @* HERE PROJECT DROPDOWN NEW_PRAVEEN *@
                @Html.HiddenFor(m => m.TICRAId)

                <input type="hidden" id="icraid" value="@ViewBag.TICRAId" />
                <input type="hidden" id="projectDLL" />
                <input type="hidden" id="hdnpermitnumber" value="@ViewBag.PermitNumber" />
                <input value="@ViewBag.PermitType" type="hidden" id="hdnpermittype" />
                <div class="row">
                    <div class="col-md-4">
                        @await Component.InvokeAsync("CommonProjectCustomDDL", new { type = "MULTI", ProjectId = !string.IsNullOrEmpty(Model.ProjectIds) ? Model.ProjectIds : "0" })
                        @*@Html.Action("ProjectCustomDDL", "Common", new { type = "MULTI", ProjectId = !string.IsNullOrEmpty(Model.ProjectIds) ? Model.ProjectIds : "0" })*@
                    </div>
                </div>

                @if (Model.Projects != null && Model.Projects.Any())
                {
                    using (Html.BeginForm("TICRAProjectObservationReport", "ICRA", FormMethod.Post, new { id = "ICRAform" }))
                    {
                        @Html.HiddenFor(m => m.TIlsmId)
                        @Html.AntiForgeryToken()
                        @*@Html.Partial("_TICRAProjectReportInfo", Model)*@
                        <input type="hidden" id="tilsmId" name="tilsmId" value="@ViewBag.TilsmId" />
                        <div id="loadpartial">
                            @await Html.PartialAsync("_TICRAProjectObservationReport", Model)
                        </div>
                        if (Model != null)
                        {
                            <div class="text-right button_Div">
                                <input type="submit" value=' @Localizer["Save"]' class="comm-button" id="btnSave" />
                                @*@Html.ActionLink("Cancel ", "IcraProjectPermit", "ICRA", new { @class = "comm-button" })*@
                                @Html.ActionLink("Cancel", "IcraProjectPermit", new { controller = "ICRA" }, new { @class = "comm-Cancelbutton" })
                            </div>
                        }
                    }
                    @*using (Html.BeginForm("ICRAProjectObserverReport", "Pdf"))
                        {
                            @Html.AntiForgeryToken()
                            <div class="">
                                <input type="hidden" name="projectIds" value="@Model.ProjectIds" />
                                <input type="hidden" name="reportId" value="@Model.TICRAReportId" />

                                @if (Model.TICRAReportId > 0)
                                {
                                    <button id="submitButton" type="submit" class="comm-button" style="position: absolute; right: 12px; bottom: 25px;">Create Pdf</button>
                                }
                            </div>
                        }*@
                }
                else
                {
                    <span>Select Project Name to Create Report</span>
                }


            </div>
        </div>
    </div>
</div>


<input type="hidden" id="hdn_projectIds" value="@Model.ProjectIds" />
<script>

    $(document).ready(function () {

        pageLoad();

        $("#permitnumber").val('@ViewBag.PermitNumber');

    });

    var bindReportDll = (reportId) => {
        var SelectedDates = {};
        $("#ticraobsReports").append($('<option></option>').val(0).html('Create New Report'));
        @foreach (var item in Model.RelatedReports)
        {

            var reportDate = $"{item.ReportDate.Month}/{item.ReportDate.Day}/{item.ReportDate.Year}";
            @:SelectedDates[new Date('@reportDate')] = new Date('@reportDate').toString()
            @:$("#ticraobsReports").append($('<option></option>').val(@item.TICRAReportId).html('@item.ReportDate.ToFormatDate() (@item.ReportNameText)'));
        }

        //var reportId = getParameterByName('reportId') == null ? "0" : getParameterByName('reportId');
        if (reportId) {
            $("#ticraobsReports").val(reportId);

        }


    }

    var bindProjectDll = () => {
        debugger;
        var projectIds = $('#ProjectIds').val().split(',');
        $(`.chkMultiSelect input[type="checkbox"]`).prop('checked',false)
        $(projectIds).each((i,val) => {
            $(`.chkMultiSelect input[type="checkbox"][value="${val}"]`).prop('checked', true)
            $('.chkMultiSelect').parent().parent().children('label').text(selectProjectLabel($('.chkMultiSelect')))
        })

    }

    function pageLoad() {
        //alert($('#ProjectIds').val())
        var projectId = getParameterByName('projectId') != null ? getParameterByName('projectId') : '@Model.ProjectIds'
        $('[name="projectIds"]').val(projectId)
        var SelectedDates = {};
        $("#ticraobsReports").append($('<option></option>').val(0).html('New Report'));
        @foreach (var item in Model.RelatedReports)
        {
            var reportDate = $"{item.ReportDate.Month}/{item.ReportDate.Day}/{item.ReportDate.Year}";
            @:SelectedDates[new Date('@reportDate')] = new Date('@reportDate').toString()
            @:$("#ticraobsReports").append($('<option></option>').val(@item.TICRAReportId).html('@item.ReportDate.ToFormatDate()'));
        }

        var reportId = getParameterByName('reportId') == null ? "0" : getParameterByName('reportId');
        console.log(reportId)
        if (reportId) {
            $("#ticraobsReports").val(reportId);
            $("#ticraobsReports").trigger("change");
        }

        $('#reportdatetime').datepicker({
            minDate: new Date(@Model.ReportDate.Year, @Model.ReportDate.Month -1, @Model.ReportDate.Day),
            maxDate: new Date(),
            beforeShowDay: function (date) {
                var Highlight = SelectedDates[date];
                if (Highlight) {
                    return [true, "highlighted", Highlight];
                }
                else {
                    return [true, '', ''];
                }
            }
        });
    }

    var projectDDL = $("#projectDLL");

    projectDDL.change(function () {
        debugger;
        var projectIds = getCheckedValue('chkMultiSelect').join(',');
        if (projectIds != null && projectIds != '') {
            var url = '@Url.Action("TICRAProjectObservationReport", "ICRA")' + "?projectId=" + projectIds +"&reportId=0";
        }
        else {
            var url = '@Url.Action("TICRAProjectObservationReport", "ICRA")';
        }
        if ('@ViewBag.TilsmId' > 0) {
            url = url + "&tilsmId=" + '@ViewBag.TilsmId';
        }

        window.location.href = url;

    });

    $(document).on('change',"#ticraobsReports",function () {
        var reportId = $(this).val();
        if (reportId == "0") {
            $('#submitButton').hide()
        }
        else {
            $('#submitButton').show()
        }
        var projectId = getParameterByName('projectId') != null ? getParameterByName('projectId') : '@Model.ProjectIds'
        console.log(reportId)
        console.log(getParameterByName('projectId'))
        //var reportId = getParameterByName('reportId') == null ? "0" : getParameterByName('reportId');
        $('[name="reportId"]').val(reportId)
        //if (reportId > 0) {

            var text = $("#ticraobsReports option:selected").text();
            $("#reportdatetime").val(text);
            $("#reportdatetime").addClass("disable");

            $.ajax({
                url: '@Url.Content("~/ICRA/ProjectObservationReport")' + "?projectIds=" + projectId + "&reportId=" + reportId + "&permittype=" + $("#hdnpermittype").val(),
                type: "GET",
                dataType: "HTML",
                success: function (data) {
                    if (data) {
                        $('#loadpartial').empty().html(data).fadeIn('fast');
                        $('#ModelProjectIds').val()
                        $('[name="projectIds"]').val($('#ModelProjectIds').val())
                        $('#ProjectIds').val($('#ModelProjectIds').val())
                        bindReportDll(reportId)
                        bindProjectDll();
                        if ($("#ticraobsReports").val() == "0") {
                            $("#PermitNumber").val($("#hdnpermitnumber").val());
                        }
                        if ($("#PermitNumber").val() != null && $("#PermitNumber").val() != "") {
                            $("#divpermitnumber").show();
                        }
                        else {
                            $("#divpermitnumber").hide();
                        }
                       // pageLoad()
                    }
                }
            });
        //} else {
        //    window.location.reload(true);
        //}
    })

</script>
<style>

    .highlighted a {
        background-color: #00FF00 !important;
        background-image: none !important;
        color: #000 !important;
    }

    .selectList {
        width: calc(100% - 10px);
        margin-left: 0;
        border: 1px solid #ccc;
        padding: 5px;
        border-radius: 0px;
        display: inline-block;
        position: relative;
        /*margin-right: 10px;*/
    }
</style>